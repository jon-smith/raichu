{"version":3,"sources":["store/activity-data/slice.ts","store/view/slice.ts","library/utils/array-utils.ts","library/activity-data/best-split-calculator.ts","library/activity-data/activity-calculator.ts","store/workout-creator/helpers.ts","store/workout-creator/selectors.ts","store/workout-creator/slice.ts","store/reducers.ts","store/configure-store.ts","store/dispatch-hooks.ts","generic-components/charts/xy-plot.tsx","library/utils/time-format-utils.ts","library/activity-data/activity-container.ts","store/activity-data/selectors.ts","components/helpers/activity-data-component-helpers.tsx","components/styles/form-styles.ts","components/activity-view/best-split-curve-selection.tsx","components/activity-view/best-split-plot.tsx","library/utils/file-utils.ts","library/activity-parsers/xml-helpers.ts","library/activity-parsers/gpx-parser.ts","library/activity-parsers/tcx-parser.ts","generic-components/file/activity-file-drop.tsx","components/activity-view/connected-activity-file-drop.tsx","components/activity-view/activity-selection-form.tsx","library/utils/chart-utils.ts","components/activity-view/time-series-selection.tsx","components/activity-view/time-series-data-viewer.tsx","components/activity-view/activity-view-selection.tsx","components/activity-view/activity-data-viewer.tsx","components/workout-creator/workout-creator-chart.tsx","components/workout-creator/settings-form-group.tsx","components/workout-creator/activity-loader.tsx","library/activity-data/export-mrc.ts","components/workout-creator/interval-adjustment-form-group.tsx","components/workout-creator/workout-creator-panel.tsx","components/responsive-drawer-nav.tsx","components/app-impl.tsx","serviceWorker.ts","index.tsx"],"names":["slice","createSlice","name","initialState","activities","view","reducers","setView","state","action","payload","addActivities","length","undefined","selectedIndex","clearActivityData","setSelectedIndex","reducer","actions","currentPage","setCurrentPage","filterNullAndUndefined","input","filter","i","map","movingAverageObj","values","accessor","movingAverageRadius","radius","result","sum","count","indexToRemove","indexToAdd","push","fillMissingIndices","data","lastIndex","filledArray","forEach","d","index","Math","floor","buildLinearInterpolator","x0","x1","y0","y1","gradient","offset","x","interpolateNullValues","dataPoints","maxGap","lastNonNullIndex","interpolator","j","calculateMaxAveragesForDistances","indexDistances","currentMaxSumsForDistances","distance","bestSum","bestIndex","sort","a","b","dataPointsNullAsZero","from","n","to","min","sumRange","best","startIndex","average","getVar","p","v","heartRate","power","cadence","elevation","secondsSinceStart","getAsTimeSeries","y","filledPoints","flatPoints","asRawVariable","o","getBestSplitsVsTime","option","timeRanges","maxGapForInterpolation","maxAveragesForDistances","rawVariable","distances","cumulativeDistance","interpolatedDistances","speeds","_","previousDistance","delta","getInterpolatedDataPointsForBestSplits","calculateActivityProcessedPowerTimeSeries","activity","options","variable","rawTimeSeries","rawValues","interpolatedTimeSeries","interpolateNull","resolution","value","getProcessedTimeSeries","getDetectedIntervals","createSelector","s","ftp","generationParams","params","processedPowerTimeSeries","timeSeries","smoothedTimeSeries","inputSmoothingRadius","ArrayUtils","t","intensityPerSecond","discrepencyCurve","windowRadius","smoothingRadius","multiplier","Array","before","after","difference","d3","calculateMovingWindowDiscrepencyCurve","discrepencySmoothingRadius","detectedStepTimePoints","stepThreshold","peaks","previousInflection","abs","calculateDetectedSteps","startTime","endTime","duration","thisIntervalData","intensity","intervals","rawInput","smoothedInput","getColor","intervalsWithColor","currentIntervals","color","canRedo","currentHistoryPosition","history","selectedOrNewInterval","selectedInterval","newInterval","defaultIntervals","fill","flat","defaultState","minIntervalDuration","generatingFromActivity","generateIntervals","createAsyncThunk","setIntervalsImpl","pred","every","newHistory","workoutCreatorSlice","setIntervals","undo","redo","setSelectedIntensity","updatedIntervals","setSelectedLength","setFTP","setWindowRadius","setStepThreshold","setInputSmoothing","setDiscrepencySmoothing","setActivity","clearActivity","extraReducers","builder","addCase","pending","rejected","fulfilled","rootReducer","combineReducers","activityReducer","viewReducer","workoutCreator","workoutCreatorReducer","useActivitySelector","selector","useSelector","useWorkoutCreatorSelector","configureStore","toolkitConfigure","enableBatching","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","devTools","useAppDispatch","useDispatch","useDispatchCallback","dispatch","useCallback","LineSeriesStyle","lineStyle","markStyle","stroke","MarkSeriesStyle","LineMarkSeriesStyle","buildSeriesComponents","series","seriesComponents","key","size","getNull","type","getSeriesStyle","seriesType","gridStyle","axisStyle","line","backgroundFill","borderStyle","bottom","left","right","top","XYPlot","props","xType","yType","xDomain","yDomain","useState","zoomArea","setZoomArea","xDomainToUse","yDomainToUse","useMemo","className","style","title","xAxisLabel","tickValues","xTickValues","tickFormat","xTickFormat","yAxisLabel","yTickValues","yTickFormat","onBrushEnd","defaultProps","formatSecondsAsHHMMSS","seconds","round","String","minutes","remainingSeconds","remainingSecondsStr","hours","remainingMinutes","remainingMinutesStr","formatSecondsAsTimeWords","getAttributes","activityContainer","source","track","date","metadata","time","id","laps","tracks","points","asGeolibCoord","latitude","lat","longitude","lon","buildExtendedPoints","earliestTime","Date","cumulativeDistances","some","location","copy","concat","cumulative","getDistance","getCumulativeDistances","getTime","fromGPXData","segments","flatMap","getSelectedActivity","getActivityAttributes","filename","primaryColourForVariable","primaryColourForBestSplitOption","asVar","axisLabelForVariable","useFormStyles","extra","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","BestSplitCurveSelectionForm","styles","onChange","makeOnChange","e","c","FormControl","component","FormLabel","RadioGroup","row","aria-label","defaultValue","FormControlLabel","control","Radio","label","labelPlacement","checked","frontBack","defaultTimeTicksForBestSplits","defaultTimeAxisRange","distancesForPaceCurve","defaultPaceCurveXDomain","buildPaceCurve","sortedDistances","maxDistance","currentMinTimesForDistances","segmentStart","segmentStartDistance","deltaTime","deltaDistance","r","currentBest","calculateMinTimesForDistances","buildPowerCurve","activityCalculator","buildHRCurve","BestSplitPlot","defaultXDomain","plotProps","yRange","calcYDomain","BestSplitPlotComponent","bestSplitOption","setBestSplitOption","selectedActivity","selectedActivities","useBestSplitChartData","bestSplitChartProps","readFileAsText","inputFile","fileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","readAsText","getElementValue","parent","elem","getElementsByTagName","innerHTML","getNumericChildElementValue","el","parseFloat","getNumericAttributeValue","att","getAttribute","getMetadata","metadataNode","Helper","getPoint","pointNode","temperature","getSegment","segmentNode","querySelectorAll","parseGPXFile","file","gpxXml","DOMParser","parseFromString","querySelector","trackNode","getTrack","parseTrackPoint","pointElement","hrElement","parseTrack","trackElement","parseLap","lapElement","parseActivity","activityElement","parseTCXFile","activitiesNode","parseData","contents","typeLower","toLowerCase","extractActivityData","l","fromTCXData","ActivityFileDrop","onAddFiles","allowMultiple","text","addFiles","files","onDrop","acceptedFiles","readers","f","all","fileContents","fileData","split","pop","useDropzone","accept","multiple","getRootProps","getInputProps","textToUse","ConnectedActivityFileDrop","addActivitesCallback","SimpleSelect","classes","width","setSelectedActivityIndex","showFilename","setShowFilename","menuItems","MenuItem","display","justifyContent","InputLabel","Select","labelId","parseInt","target","Number","isSafeInteger","Checkbox","defaultTimeTicks","findNiceTimeTickInterval","maxValue","maxTicks","targetInterval","buildNiceTimeTicksToDisplay","maxSeconds","interval","lodash","TimeSeriesDataViewer","variableOption","setVariableOption","maxTimeSeconds","max","timeTicks","StyledTabs","withStyles","root","borderBottom","backgroundColor","palette","background","paper","Tabs","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","Tab","disableRipple","viewOrder","pageToIndex","findIndex","NavigationTabs","setViewCallback","setCurrentPageCallback","newValue","ActivityDataViewer","activitiesLoaded","componentFromView","buildChart","nodeRef","height","initialData","svg","html","padding","xScale","yScale","xScaleTimeSpan","calculateStartTimes","on","dragMouseOffsetX","localSelectedIndex","updateSelectedOutline","selectedData","selectAll","attr","raise","drag","dataIndex","indexOf","bar","mouseX","barX","draggingBar","dragDataCurrentIndex","newX","backlash","range","newIndex","d2","newIndexToUse","newDataOrder","inputCopy","splice","moveItemInArray","k","transition","currentX","doUpdate","newSelectedIndex","endTimeSeconds","xAxis","timeTicksToDisplay","yAxis","domain","enter","append","call","withResizeDetector","svgRef","useRef","useEffect","current","ref","useStyles","NumericFormControlLabel","formControlClasses","TextField","variant","SettingsFormGroup","loadedActivity","isGenerating","setFTPCallback","setStepThresholdCallback","setWindowRadiusCallback","setInputSmoothingCallback","setDiscrepencySmoothingCallback","generateIntervalsDispatcher","FormGroup","Button","onClick","disabled","ActivityLoadHeader","setActivityDispatcher","clearActivitityDispatcher","IconButton","Close","stopClickFocusPropagation","event","stopPropagation","onFocus","FormSwitch","setValue","Switch","ActivityChart","showDiscrepencyCurve","setShowDiscrepencyCurve","showDetectedSteps","setShowDetectedSteps","showSmoothedInput","setShowSmoothedInput","powerData","maxPower","powerDataSeries","discrepencyCurveSeries","absolute","maxDelta","adjustment","normalised","detectedStepsSeries","stepVsPower","activityXTicks","maxX","allSeries","Box","flexDirection","ActivityLoader","ExpansionPanel","ExpansionPanelSummary","expandIcon","alignItems","minHeight","ExpansionPanelDetails","convertToCourseData","withStartEndTimes","startTimeMinutes","endTimeMinutes","durationSeconds","calculateWithStartEndTimes","timeMinutes","intensityPercent","downloadMRCFile","mrcString","description","courseHeader","makeCourseHeader","courseDataString","toFixed","join","buildMRCFileString","element","document","createElement","Blob","href","URL","createObjectURL","download","body","appendChild","click","IntervalAdjustmentFormGroup","w","undoEnabled","redoEnabled","currentSelectedInterval","WorkoutCreatorActions","saveToMRC","setIntervalDuration","m","unix","addInterval","deleteSelected","Save","Undo","Redo","moment","showHour","showMinute","showSecond","Add","Delete","WorkoutCreatorPage","newIntervals","batchActions","useActions","onMouseWheel","intensityChange","deltaY","newIntensity","onWheel","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","toolbar","mixins","drawerPaper","content","flexGrow","ResponsiveDrawerNav","children","onMenuSelect","useTheme","React","mobileOpen","setMobileOpen","handleDrawerToggle","Divider","List","ListItem","button","ListItemText","primary","CssBaseline","AppBar","position","Toolbar","edge","Typography","noWrap","Hidden","lgUp","implementation","Drawer","anchor","direction","open","onClose","ModalProps","keepMounted","mdDown","createMuiTheme","main","secondary","AppImpl","PageElement","page","WorkoutCreatorPanel","getPage","ThemeProvider","Boolean","window","hostname","match","store","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.01d23f16.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ActivityContainer } from 'library/activity-data/activity-container';\n\ntype ExtendedActivityContainer = ActivityContainer & { filename: string };\n\nexport type View = 'data' | 'interval-detector';\n\nexport type ActivityState = Readonly<{\n\tactivities: ExtendedActivityContainer[];\n\tselectedIndex?: number;\n\tview: View;\n}>;\n\nconst defaultState: ActivityState = {\n\tactivities: [],\n\tview: 'data',\n};\n\nconst slice = createSlice({\n\tname: 'activityData',\n\tinitialState: defaultState,\n\treducers: {\n\t\tsetView(state, action: PayloadAction<View>) {\n\t\t\tstate.view = action.payload;\n\t\t},\n\t\taddActivities(state, action: PayloadAction<ExtendedActivityContainer[]>) {\n\t\t\tstate.activities = [...state.activities, ...action.payload];\n\t\t\t// If we have any activities, but don't have a selection, select the first\n\t\t\tif (state.activities.length > 0 && state.selectedIndex === undefined) {\n\t\t\t\tstate.selectedIndex = 0;\n\t\t\t}\n\t\t},\n\t\tclearActivityData(state) {\n\t\t\tstate.activities = [];\n\t\t},\n\t\tsetSelectedIndex(state, action: PayloadAction<number | undefined>) {\n\t\t\tstate.selectedIndex = action.payload;\n\t\t},\n\t},\n});\n\nexport const { reducer, actions } = slice;\n\nexport const { setView, addActivities, clearActivityData, setSelectedIndex } = actions;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport type Page = 'data' | 'workout-creator';\n\nexport interface ViewState {\n\treadonly currentPage: Page;\n}\n\nconst defaultState: ViewState = {\n\tcurrentPage: 'data',\n};\n\nconst slice = createSlice({\n\tname: 'view',\n\tinitialState: defaultState,\n\treducers: {\n\t\tsetCurrentPage(state, action: PayloadAction<Page>) {\n\t\t\tstate.currentPage = action.payload;\n\t\t},\n\t},\n});\n\nexport const { reducer, actions } = slice;\n\nexport const { setCurrentPage } = actions;\n","export function filterNullAndUndefined<T>(input: readonly (T | null | undefined)[]): T[] {\n\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\treturn input.filter((i) => i !== null && i !== undefined).map((i) => i!);\n}\n\nexport function areEqual<T>(a: readonly T[], b: readonly T[], pred: (a: T, b: T) => boolean) {\n\treturn a.length === b.length && a.every((v, i) => pred(v, b[i]));\n}\n\nexport function cumulative(input: number[]) {\n\tconst copy = input.concat();\n\n\tfor (let i = 1; i < input.length; i++) {\n\t\tcopy[i] = copy[i - 1] + input[i];\n\t}\n\treturn copy;\n}\n\nexport function sortNumeric(input: number[]) {\n\treturn input.concat().sort((a, b) => a - b);\n}\n\nexport function findPeaksAndTroughs(input: number[]) {\n\tconst result = input.map(() => null as 'peak' | 'trough' | null);\n\n\tif (input.length > 0) {\n\t\tlet i = 1;\n\t\t// Determine if the first value is a peak or trough\n\t\tfor (; i < input.length; ++i) {\n\t\t\tif (input[i] > input[i - 1]) {\n\t\t\t\tresult[0] = 'trough';\n\t\t\t\tbreak;\n\t\t\t} else if (input[i] < input[i - 1]) {\n\t\t\t\tresult[0] = 'peak';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet previousInflection = result[0];\n\t\tfor (; i < input.length; ++i) {\n\t\t\t// If last point was a peak, we want to find the next increase, which is the next trough\n\t\t\tif (previousInflection === 'peak') {\n\t\t\t\tif (input[i] > input[i - 1]) {\n\t\t\t\t\tresult[i - 1] = 'trough';\n\t\t\t\t\tpreviousInflection = 'trough';\n\t\t\t\t}\n\t\t\t} else if (previousInflection === 'trough') {\n\t\t\t\tif (input[i] < input[i - 1]) {\n\t\t\t\t\tresult[i - 1] = 'peak';\n\t\t\t\t\tpreviousInflection = 'peak';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function movingAverage(values: number[], movingAverageRadius?: number) {\n\tconst radius = movingAverageRadius ?? 0;\n\tif (radius === 0) return values;\n\n\tconst result: number[] = [];\n\n\tlet sum = 0;\n\n\tfor (let i = 0; i < radius && i < values.length; ++i) {\n\t\tsum += values[i];\n\t}\n\n\tlet count = radius;\n\n\tfor (let i = 0; i < values.length; ++i) {\n\t\tconst indexToRemove = i - radius - 1;\n\t\tconst indexToAdd = i + radius;\n\n\t\tif (indexToAdd < values.length) {\n\t\t\tsum += values[indexToAdd];\n\t\t\tcount += 1;\n\t\t}\n\t\tif (indexToRemove >= 0) {\n\t\t\tsum -= values[indexToRemove];\n\t\t\tcount -= 1;\n\t\t}\n\n\t\tresult.push(sum / count);\n\t}\n\n\treturn result;\n}\n\nexport function movingAverageObj<T extends { [k: string]: number }>(\n\tvalues: T[],\n\taccessor: keyof T,\n\tmovingAverageRadius?: number\n) {\n\tconst radius = movingAverageRadius ?? 0;\n\tif (radius === 0) return values;\n\n\tconst result: T[] = [];\n\n\tlet sum = 0;\n\n\tfor (let i = 0; i < radius && i < values.length; ++i) {\n\t\tsum += values[i][accessor];\n\t}\n\n\tlet count = radius;\n\n\tfor (let i = 0; i < values.length; ++i) {\n\t\tconst indexToRemove = i - radius - 1;\n\t\tconst indexToAdd = i + radius;\n\n\t\tif (indexToAdd < values.length) {\n\t\t\tsum += values[indexToAdd][accessor];\n\t\t\tcount += 1;\n\t\t}\n\t\tif (indexToRemove >= 0) {\n\t\t\tsum -= values[indexToRemove][accessor];\n\t\t\tcount -= 1;\n\t\t}\n\n\t\tresult.push({ ...values[i], [accessor]: sum / count });\n\t}\n\n\treturn result;\n}\n","import { sortNumeric } from 'library/utils/array-utils';\n\nexport type BestAverage = {\n\tstartIndex: number;\n\taverage: number;\n};\n\nexport type Result = {\n\tdistance: number;\n\tbest: BestAverage | null;\n};\n\nconst sumRange = (values: number[], from: number, n: number) => {\n\tlet sum = 0;\n\tconst to = Math.min(values.length, from + n);\n\tfor (let i = from; i < to; ++i) {\n\t\tsum += values[i];\n\t}\n\treturn sum;\n};\n\nexport const fillMissingIndices = <T extends { index: number }>(data: T[]) => {\n\tconst filledArray: { index: number; data?: T }[] = [];\n\tif (data.length > 0) {\n\t\tlet lastIndex: number | undefined;\n\t\tdata.forEach((d) => {\n\t\t\tconst index = Math.floor(d.index);\n\t\t\tif (lastIndex === undefined) {\n\t\t\t\tfilledArray.push({ index, data: d });\n\t\t\t\tlastIndex = index;\n\t\t\t}\n\t\t\t// Ignore repeated indices\n\t\t\telse if (index > lastIndex) {\n\t\t\t\twhile (lastIndex + 1 < index) {\n\t\t\t\t\tlastIndex += 1;\n\t\t\t\t\tfilledArray.push({ index: lastIndex });\n\t\t\t\t}\n\n\t\t\t\tfilledArray.push({ index, data: d });\n\t\t\t\tlastIndex = index;\n\t\t\t}\n\t\t});\n\t}\n\n\treturn filledArray;\n};\n\nconst buildLinearInterpolator = (\n\tx0: number,\n\tx1: number,\n\ty0: number,\n\ty1: number\n): ((value: number) => number) => {\n\tconst gradient = (y1 - y0) / (x1 - x0);\n\tconst offset = y0 - gradient * x0;\n\treturn (x: number) => gradient * x + offset;\n};\n\nexport const interpolateNullValues = (\n\tdataPoints: readonly (number | null)[],\n\tmaxGap: number\n): (number | null)[] => {\n\t// Copy the input\n\tconst result = [...dataPoints];\n\n\tif (maxGap === 0) return result;\n\n\tlet lastNonNullIndex: number | null = null;\n\tfor (let i = 0; i < result.length; ++i) {\n\t\t// We haven't yet found a non null index\n\t\t// So keep looking\n\t\tif (lastNonNullIndex === null) {\n\t\t\tif (result[i] !== null) lastNonNullIndex = i;\n\t\t}\n\t\t// We have a non-null index, so we can interpolate\n\t\telse if (result[i] !== null) {\n\t\t\t// If we had a gap including nulls that is smaller than the max gap\n\t\t\t// We can interpolate\n\t\t\tif (i > lastNonNullIndex + 1 && i <= lastNonNullIndex + maxGap) {\n\t\t\t\tconst interpolator = buildLinearInterpolator(\n\t\t\t\t\tlastNonNullIndex,\n\t\t\t\t\ti,\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tdataPoints[lastNonNullIndex]!,\n\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t\t\tdataPoints[i]!\n\t\t\t\t);\n\t\t\t\tfor (let j = lastNonNullIndex + 1; j < i; ++j) {\n\t\t\t\t\tresult[j] = interpolator(j);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlastNonNullIndex = i;\n\t\t}\n\t}\n\n\treturn result;\n};\n\n// Calculate the best average of the data points when the distance between indices is equal to the supplied distance\n// Return results will be ordered by distance\nexport function calculateMaxAveragesForDistances(\n\tdataPoints: (number | null)[],\n\tindexDistances: number[]\n): Result[] {\n\tif (indexDistances.length === 0) return [];\n\n\tlet currentMaxSumsForDistances = indexDistances\n\t\t.map((distance) => ({ distance, bestSum: 0, bestIndex: null as number | null }))\n\t\t.sort((a, b) => a.distance - b.distance);\n\n\tconst dataPointsNullAsZero = dataPoints.map((d) => d ?? 0);\n\tfor (let i = 0; i < dataPointsNullAsZero.length; ++i) {\n\t\tcurrentMaxSumsForDistances = currentMaxSumsForDistances.map((b) => {\n\t\t\tconst compareIndex = i + b.distance - 1;\n\t\t\tif (compareIndex < dataPointsNullAsZero.length) {\n\t\t\t\tconst sum = sumRange(dataPointsNullAsZero, i, b.distance);\n\t\t\t\tif (b.bestIndex === null || sum > b.bestSum) {\n\t\t\t\t\treturn { distance: b.distance, bestSum: sum, bestIndex: i };\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn b;\n\t\t});\n\t}\n\n\treturn currentMaxSumsForDistances.map((b) => ({\n\t\tdistance: b.distance,\n\t\tbest:\n\t\t\tb.bestIndex === null ? null : { startIndex: b.bestIndex, average: b.bestSum / b.distance },\n\t}));\n}\n\nexport function calculateMinTimesForDistances(\n\tdataPoints: { time: number; cumulativeDistance?: number }[],\n\tdistances: number[]\n) {\n\tif (distances.length === 0) return [];\n\n\tconst sortedDistances = sortNumeric(distances);\n\n\tconst maxDistance = sortedDistances[sortedDistances.length - 1];\n\tconst currentMinTimesForDistances = sortedDistances.map((d) => ({\n\t\tdistance: d,\n\t\tbest: null as null | { time: number; startTime: number },\n\t}));\n\n\tfor (let i = 0; i < dataPoints.length; ++i) {\n\t\tconst segmentStart = dataPoints[i];\n\t\tconst segmentStartDistance = segmentStart.cumulativeDistance;\n\t\tif (segmentStartDistance !== undefined) {\n\t\t\tfor (let j = i; j < dataPoints.length; ++j) {\n\t\t\t\tconst { time, cumulativeDistance } = dataPoints[j];\n\t\t\t\tif (cumulativeDistance) {\n\t\t\t\t\tconst deltaTime = time - segmentStart.time;\n\t\t\t\t\tconst deltaDistance = cumulativeDistance - segmentStartDistance;\n\n\t\t\t\t\tfor (let r = 0; r < currentMinTimesForDistances.length; ++r) {\n\t\t\t\t\t\tif (deltaDistance >= currentMinTimesForDistances[r].distance) {\n\t\t\t\t\t\t\tconst currentBest = currentMinTimesForDistances[r].best;\n\t\t\t\t\t\t\tif (currentBest == null || deltaTime < currentBest.time) {\n\t\t\t\t\t\t\t\tcurrentMinTimesForDistances[r].best = {\n\t\t\t\t\t\t\t\t\tstartTime: segmentStart.time,\n\t\t\t\t\t\t\t\t\ttime: deltaTime,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Once we have exceeded the max distance, no point searching any more\n\t\t\t\t\tif (deltaDistance > maxDistance) break;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentMinTimesForDistances;\n}\n","import {\n\tcalculateMaxAveragesForDistances as maxAveragesForDistances,\n\tcalculateMinTimesForDistances,\n\tinterpolateNullValues,\n} from 'library/activity-data/best-split-calculator';\nimport { ActivityContainer, ExtendedPoint } from './activity-container';\n\nexport type Variable = 'heartrate' | 'power' | 'cadence' | 'elevation' | 'time';\n\nconst getVar = (p: ExtendedPoint, v: Variable) => {\n\tswitch (v) {\n\t\tcase 'heartrate':\n\t\t\treturn p.heartRate ?? null;\n\t\tcase 'power':\n\t\t\treturn p.power ?? null;\n\t\tcase 'cadence':\n\t\t\treturn p.cadence ?? null;\n\t\tcase 'elevation':\n\t\t\treturn p.elevation ?? null;\n\t\tcase 'time':\n\t\t\treturn p.secondsSinceStart;\n\t\tdefault:\n\t\t\treturn null;\n\t}\n};\n\nexport function getAsTimeSeries(data: ActivityContainer, y: Variable, filledPoints = false) {\n\tif (filledPoints) {\n\t\treturn data.filledPoints.map((p) => ({ x: p.index, y: p.data ? getVar(p.data, y) : null }));\n\t}\n\treturn data.flatPoints.map((p) => ({ x: p.secondsSinceStart, y: getVar(p, y) }));\n}\n\nexport function extractData(data: ActivityContainer, v: Variable, filledPoints = false) {\n\tif (filledPoints) {\n\t\treturn data.filledPoints.map((p) => (p.data ? getVar(p.data, v) : null));\n\t}\n\treturn data.flatPoints.map((p) => getVar(p, v));\n}\n\nexport type TimeSeriesProcessingOptions = {\n\tinterpolateNull: boolean;\n\tmaxGapForInterpolation: number;\n\tresolution: number;\n};\n\nexport function getProcessedTimeSeries(\n\tdata: ActivityContainer,\n\tvariable: Variable,\n\toptions: TimeSeriesProcessingOptions\n) {\n\tconst rawTimeSeries = getAsTimeSeries(data, variable, true);\n\tconst rawValues = rawTimeSeries.map((v) => v.y);\n\tconst interpolatedValues = options.interpolateNull\n\t\t? interpolateNullValues(rawValues, options.maxGapForInterpolation)\n\t\t: rawValues;\n\n\tconst interpolatedTimeSeries = interpolatedValues.map((v, i) => ({\n\t\tx: rawTimeSeries[i].x,\n\t\ty: v,\n\t}));\n\tif (options.resolution <= 1) {\n\t\treturn interpolatedTimeSeries;\n\t}\n\n\ttype ResultT = typeof interpolatedTimeSeries;\n\n\tconst result: ResultT = [];\n\n\tfor (let i = 0; i < interpolatedTimeSeries.length; i += options.resolution) {\n\t\tlet sum = null as null | number;\n\t\tconst count = Math.min(options.resolution, interpolatedTimeSeries.length - i);\n\t\tfor (let j = 0; j < count; ++j) {\n\t\t\tconst value = interpolatedTimeSeries[i + j].y;\n\t\t\tif (value != null) {\n\t\t\t\tsum = value + (sum ?? 0);\n\t\t\t}\n\t\t}\n\t\tconst average = sum === null ? null : sum / count;\n\t\tresult.push({ x: interpolatedTimeSeries[i].x, y: average });\n\t}\n\n\treturn result;\n}\n\nexport type BestSplitOption = 'heartrate' | 'power' | 'cadence' | 'time' | 'speed';\n\nexport function asRawVariable(o: BestSplitOption): Variable | null {\n\tswitch (o) {\n\t\tcase 'heartrate':\n\t\t\treturn 'heartrate';\n\t\tcase 'power':\n\t\t\treturn 'power';\n\t\tcase 'cadence':\n\t\t\treturn 'cadence';\n\t\tcase 'time':\n\t\t\treturn 'time';\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nfunction getInterpolatedDataPointsForBestSplits(\n\tdata: ActivityContainer,\n\toption: BestSplitOption,\n\tmaxGapForInterpolation: number\n) {\n\tconst rawVariable = asRawVariable(option);\n\n\tif (rawVariable) {\n\t\tconst dataPoints = data.filledPoints.map((p) =>\n\t\t\tp.data !== undefined ? getVar(p.data, rawVariable) ?? null : null\n\t\t);\n\n\t\treturn interpolateNullValues(dataPoints, maxGapForInterpolation);\n\t}\n\tif (option === 'speed') {\n\t\t// For speed, we first interpolate cumulative distance and then calc speed from that\n\t\tconst distances = data.filledPoints.map((p) => p.data?.cumulativeDistance ?? null);\n\t\tconst interpolatedDistances = interpolateNullValues(distances, maxGapForInterpolation);\n\n\t\t// Set all speeds to zero\n\t\tconst speeds = interpolatedDistances.map((_) => 0);\n\n\t\tlet previousDistance = interpolatedDistances[0] ?? 0;\n\t\tfor (let i = 1; i < interpolatedDistances.length; ++i) {\n\t\t\tconst distance = interpolatedDistances[i];\n\t\t\tif (distance != null) {\n\t\t\t\tconst delta = distance - previousDistance;\n\t\t\t\tif (delta > 0) {\n\t\t\t\t\t// Each index is a unit of time, so no need to divide by t\n\t\t\t\t\tspeeds[i] = delta;\n\t\t\t\t}\n\t\t\t\tpreviousDistance = distance;\n\t\t\t}\n\t\t}\n\n\t\treturn speeds;\n\t}\n\n\treturn [];\n}\n\nexport const getBestSplitsVsTime = (\n\tdata: ActivityContainer,\n\toption: BestSplitOption,\n\ttimeRanges: number[],\n\tmaxGapForInterpolation: number\n) => {\n\tconst interpolatedData = getInterpolatedDataPointsForBestSplits(\n\t\tdata,\n\t\toption,\n\t\tmaxGapForInterpolation\n\t);\n\n\treturn maxAveragesForDistances(interpolatedData, timeRanges);\n};\n\nexport function getMinTimesPerDistance(data: ActivityContainer, distances: number[]) {\n\treturn calculateMinTimesForDistances(\n\t\tdata.flatPoints.map((d) => ({\n\t\t\ttime: d.secondsSinceStart,\n\t\t\tcumulativeDistance: d.cumulativeDistance,\n\t\t})),\n\t\tdistances\n\t);\n}\n","import * as d3 from 'd3';\nimport {\n\tgetProcessedTimeSeries,\n\tTimeSeriesProcessingOptions,\n} from 'library/activity-data/activity-calculator';\nimport * as ArrayUtils from 'library/utils/array-utils';\nimport { ActivityContainer } from 'library/activity-data/activity-container';\nimport { DiscrepencyCurvePoint, ActivityToIntervalParameters, Interval } from './types';\n\nexport function calculateActivityPowerPerSecond(activity?: ActivityContainer) {\n\tif (!activity) return [];\n\n\treturn activity.filledPoints.map((p) => p.data?.power ?? null);\n}\n\nexport function calculateActivityProcessedPowerTimeSeries(\n\tactivity?: ActivityContainer,\n\toptions?: TimeSeriesProcessingOptions\n) {\n\tif (!activity) return [];\n\n\treturn getProcessedTimeSeries(\n\t\tactivity,\n\t\t'power',\n\t\toptions ?? {\n\t\t\tmaxGapForInterpolation: 3,\n\t\t\tinterpolateNull: true,\n\t\t\tresolution: 1,\n\t\t}\n\t);\n}\n\nexport function calculateActivitySmoothedPowerTimeSeries(\n\tprocessedPowerTimeSeries: { x: number; y: number | null }[],\n\tmovingAverageRadius?: number\n) {\n\treturn ArrayUtils.movingAverageObj(\n\t\tprocessedPowerTimeSeries.map((t) => ({ x: t.x, y: t.y ?? 0 })),\n\t\t'y',\n\t\tmovingAverageRadius\n\t);\n}\n\nexport function calculateMovingWindowDiscrepencyCurve(\n\tintensityPerSecond: number[],\n\twindowRadius: number,\n\tsmoothingRadius: number\n) {\n\tconst multiplier = 1.0 / windowRadius;\n\tconst discrepencyCurve = Array<DiscrepencyCurvePoint>(0);\n\n\tfor (let i = windowRadius; i < intensityPerSecond.length - windowRadius; ++i) {\n\t\tconst before = intensityPerSecond.slice(i - windowRadius, i);\n\t\tconst after = intensityPerSecond.slice(i, i + windowRadius);\n\t\tconst difference = d3.sum(after) - d3.sum(before);\n\t\tdiscrepencyCurve.push({ t: i, delta: difference * multiplier });\n\t}\n\n\treturn ArrayUtils.movingAverageObj(discrepencyCurve, 'delta', smoothingRadius);\n}\n\nexport function calculateDetectedSteps(\n\tdiscrepencyCurve: ReturnType<typeof calculateMovingWindowDiscrepencyCurve>,\n\tstepThreshold: number\n) {\n\tconst peaks = ArrayUtils.findPeaksAndTroughs(\n\t\tdiscrepencyCurve.map((d) => Math.abs(d.delta)).map((d) => (d > stepThreshold ? d : 0.0))\n\t);\n\tconst indicesOfPeaks = ArrayUtils.filterNullAndUndefined(\n\t\tpeaks.map((p, i) => (i !== 0 && (i === peaks.length - 1 || p === 'peak') ? i : null))\n\t);\n\n\treturn indicesOfPeaks.map((i) => discrepencyCurve[i].t);\n}\n\nexport function performIntervalDetection(\n\tactivity: ActivityContainer | undefined,\n\tftp: number,\n\tparams: ActivityToIntervalParameters\n) {\n\tconst timeSeries = calculateActivityProcessedPowerTimeSeries(activity);\n\tconst smoothedTimeSeries = calculateActivitySmoothedPowerTimeSeries(\n\t\ttimeSeries,\n\t\tparams.inputSmoothingRadius\n\t);\n\tconst intensityPerSecond = smoothedTimeSeries.map((v) => v.y / ftp);\n\tconst discrepencyCurve = calculateMovingWindowDiscrepencyCurve(\n\t\tintensityPerSecond,\n\t\tparams.windowRadius,\n\t\tparams.discrepencySmoothingRadius\n\t);\n\tconst detectedStepTimePoints = calculateDetectedSteps(discrepencyCurve, params.stepThreshold);\n\n\tconst result: Interval[] = [];\n\n\tfor (let i = 1; i < detectedStepTimePoints.length; ++i) {\n\t\tconst startTime = detectedStepTimePoints[i - 1];\n\t\tconst endTime = detectedStepTimePoints[i];\n\t\tconst duration = endTime - startTime;\n\t\tconst thisIntervalData = intensityPerSecond.slice(startTime, endTime);\n\t\tresult.push({ length: duration, intensity: d3.mean(thisIntervalData) ?? 0 });\n\t}\n\n\treturn {\n\t\tintervals: result,\n\t\trawInput: timeSeries,\n\t\tsmoothedInput: smoothedTimeSeries,\n\t\tdiscrepencyCurve,\n\t\tdetectedStepTimePoints,\n\t};\n}\n","import { createSelector } from '@reduxjs/toolkit';\nimport { performIntervalDetection } from './helpers';\nimport { Interval, WorkoutCreatorState } from './types';\n\nconst activitySelector = (state: WorkoutCreatorState) => state.activity;\n\nexport const getDetectedIntervals = createSelector(\n\tactivitySelector,\n\t(s) => s.ftp,\n\t(s) => s.generationParams,\n\tperformIntervalDetection\n);\n\nconst getColor = (i: Interval) => {\n\tconst { intensity } = i;\n\tif (intensity < 0.6) return '#a6a6a6';\n\tif (intensity < 0.75) return '#9acfe3';\n\tif (intensity < 0.9) return '#77dd77';\n\tif (intensity < 1.05) return '#fdfd96';\n\tif (intensity < 1.18) return '#ffb347';\n\treturn '#ff6961';\n};\n\nexport const intervalsWithColor = createSelector(\n\t(state: WorkoutCreatorState) => state.currentIntervals,\n\t(intervals) => intervals.map((i) => ({ ...i, color: getColor(i) }))\n);\n\nexport const canUndo = (state: WorkoutCreatorState) => state.currentHistoryPosition > 0;\n\nexport const canRedo = (state: WorkoutCreatorState) =>\n\tstate.currentHistoryPosition < state.history.length - 1;\n\nexport const selectedInterval = (state: WorkoutCreatorState): Interval | null =>\n\tstate.selectedIndex === null ? null : state.currentIntervals[state.selectedIndex];\n\nexport const selectedOrNewInterval = (state: WorkoutCreatorState): Interval =>\n\tselectedInterval(state) ?? state.newInterval;\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport * as ArrayUtils from 'library/utils/array-utils';\nimport { Mutable } from 'library/utils/type-utils';\nimport { ActivityContainer } from 'library/activity-data/activity-container';\nimport { Interval, WorkoutCreatorState } from './types';\nimport { getDetectedIntervals } from './selectors';\n\nconst defaultIntervals: Interval[] = [\n\t{ intensity: 0.3, length: 60 },\n\t{ intensity: 0.4, length: 60 },\n\t{ intensity: 0.5, length: 60 },\n\t{ intensity: 0.6, length: 60 * 5 },\n\t...Array(13)\n\t\t.fill([\n\t\t\t{ intensity: 1.3, length: 30 },\n\t\t\t{ intensity: 0.6, length: 15 },\n\t\t])\n\t\t.flat(),\n\t{ intensity: 0.6, length: 60 * 5 },\n];\n\nconst defaultState: WorkoutCreatorState = {\n\tftp: 200,\n\tgenerationParams: {\n\t\tminIntervalDuration: 10,\n\t\tstepThreshold: 0.1,\n\t\twindowRadius: 10,\n\t\tdiscrepencySmoothingRadius: 1,\n\t\tinputSmoothingRadius: 1,\n\t},\n\tgeneratingFromActivity: false,\n\tnewInterval: { intensity: 1.0, length: 0 },\n\tcurrentIntervals: defaultIntervals,\n\thistory: [defaultIntervals],\n\tcurrentHistoryPosition: 0,\n\tselectedIndex: null,\n};\n\nexport const generateIntervals = createAsyncThunk(\n\t'workoutCreator/generateIntervals',\n\t// Note this function doesn't actually run asynchronously at the moment\n\t// but I intend to use a worker thread in the future\n\t// For now I just wanted to try out the usage of createAsyncThunk\n\tasync (state: WorkoutCreatorState) => {\n\t\treturn getDetectedIntervals(state).intervals;\n\t}\n);\n\nfunction setIntervalsImpl(state: Mutable<WorkoutCreatorState>, intervals: Interval[]) {\n\tconst areEqual = (a: Interval, b: Interval) =>\n\t\ta.intensity === b.intensity && a.length === b.length;\n\tif (!ArrayUtils.areEqual(intervals, state.currentIntervals, areEqual)) {\n\t\tconst newHistory = [...state.history.slice(0, state.currentHistoryPosition + 1), intervals];\n\n\t\tstate.history = newHistory;\n\t\tstate.currentHistoryPosition = newHistory.length - 1;\n\t\tstate.currentIntervals = intervals;\n\t}\n}\n\nconst workoutCreatorSlice = createSlice({\n\tname: 'workoutCreator',\n\tinitialState: defaultState,\n\treducers: {\n\t\tsetIntervals(state, action: PayloadAction<Interval[]>) {\n\t\t\tsetIntervalsImpl(state, action.payload);\n\t\t},\n\t\tundo(state) {\n\t\t\tif (state.currentHistoryPosition > 0) {\n\t\t\t\tstate.currentIntervals = state.history[state.currentHistoryPosition - 1];\n\t\t\t\tstate.currentHistoryPosition -= 1;\n\t\t\t}\n\t\t},\n\t\tredo(state) {\n\t\t\tif (state.currentHistoryPosition < state.history.length - 1) {\n\t\t\t\tstate.currentIntervals = state.history[state.currentHistoryPosition + 1];\n\t\t\t\tstate.currentHistoryPosition += 1;\n\t\t\t}\n\t\t},\n\t\tsetSelectedIndex(state, action: PayloadAction<number | null>) {\n\t\t\tstate.selectedIndex = action.payload;\n\t\t},\n\t\tsetSelectedIntensity(state, action: PayloadAction<number>) {\n\t\t\tif (state.selectedIndex === null) {\n\t\t\t\tstate.newInterval.intensity = action.payload;\n\t\t\t} else {\n\t\t\t\tconst updatedIntervals = state.currentIntervals.slice();\n\t\t\t\tupdatedIntervals[state.selectedIndex] = {\n\t\t\t\t\t...updatedIntervals[state.selectedIndex],\n\t\t\t\t\tintensity: action.payload,\n\t\t\t\t};\n\t\t\t\tsetIntervalsImpl(state, updatedIntervals);\n\t\t\t}\n\t\t},\n\t\tsetSelectedLength(state, action: PayloadAction<number>) {\n\t\t\tif (state.selectedIndex === null) {\n\t\t\t\tstate.newInterval.length = action.payload;\n\t\t\t} else {\n\t\t\t\tconst updatedIntervals = state.currentIntervals.slice();\n\t\t\t\tupdatedIntervals[state.selectedIndex] = {\n\t\t\t\t\t...updatedIntervals[state.selectedIndex],\n\t\t\t\t\tlength: action.payload,\n\t\t\t\t};\n\t\t\t\tsetIntervalsImpl(state, updatedIntervals);\n\t\t\t}\n\t\t},\n\t\tsetFTP(state, action: PayloadAction<number>) {\n\t\t\tstate.ftp = action.payload;\n\t\t},\n\t\tsetWindowRadius(state, action: PayloadAction<number>) {\n\t\t\tstate.generationParams.windowRadius = action.payload;\n\t\t},\n\t\tsetStepThreshold(state, action: PayloadAction<number>) {\n\t\t\tstate.generationParams.stepThreshold = action.payload;\n\t\t},\n\t\tsetInputSmoothing(state, action: PayloadAction<number>) {\n\t\t\tstate.generationParams.inputSmoothingRadius = action.payload;\n\t\t},\n\t\tsetDiscrepencySmoothing(state, action: PayloadAction<number>) {\n\t\t\tstate.generationParams.discrepencySmoothingRadius = action.payload;\n\t\t},\n\t\tsetActivity(state, action: PayloadAction<ActivityContainer>) {\n\t\t\tstate.activity = action.payload;\n\t\t},\n\t\tclearActivity(state) {\n\t\t\tstate.activity = undefined;\n\t\t},\n\t},\n\textraReducers: (builder) => {\n\t\tbuilder.addCase(generateIntervals.pending, (state) => {\n\t\t\tstate.generatingFromActivity = true;\n\t\t});\n\t\tbuilder.addCase(generateIntervals.rejected, (state) => {\n\t\t\tstate.generatingFromActivity = false;\n\t\t});\n\t\tbuilder.addCase(generateIntervals.fulfilled, (state, { payload }) => {\n\t\t\tsetIntervalsImpl(state, payload);\n\t\t\tstate.generatingFromActivity = false;\n\t\t});\n\t},\n});\n\nexport const { reducer, actions } = workoutCreatorSlice;\n\nexport const {\n\tsetIntervals,\n\tundo,\n\tredo,\n\tsetSelectedIndex,\n\tsetSelectedIntensity,\n\tsetSelectedLength,\n\tsetFTP,\n\tsetWindowRadius,\n\tsetStepThreshold,\n\tsetInputSmoothing,\n\tsetDiscrepencySmoothing,\n\tsetActivity,\n\tclearActivity,\n} = actions;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport { useSelector } from 'react-redux';\n\nimport { ActivityState, reducer as activityReducer } from './activity-data/slice';\nimport { ViewState, reducer as viewReducer } from './view/slice';\nimport { WorkoutCreatorState } from './workout-creator/types';\nimport { reducer as workoutCreatorReducer } from './workout-creator/slice';\n\nexport const rootReducer = combineReducers({\n\tactivities: activityReducer,\n\tview: viewReducer,\n\tworkoutCreator: workoutCreatorReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport const useRootSelector = <T extends unknown>(selector: (s: RootState) => T) =>\n\tuseSelector<RootState, T>((s) => selector(s));\n\nexport const useActivitySelector = <T extends unknown>(selector: (s: ActivityState) => T) =>\n\tuseSelector<RootState, T>((s) => selector(s.activities));\n\nexport const useViewSelector = <T extends unknown>(selector: (s: ViewState) => T) =>\n\tuseSelector<RootState, T>((s) => selector(s.view));\n\nexport const useWorkoutCreatorSelector = <T extends unknown>(\n\tselector: (s: WorkoutCreatorState) => T\n) => useSelector<RootState, T>((s) => selector(s.workoutCreator));\n","import { enableBatching } from 'redux-batched-actions';\nimport { configureStore as toolkitConfigure, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { rootReducer } from './reducers';\n\nconst makeReducer = () => enableBatching(rootReducer);\n\nconst configureStore = () => {\n\tconst store = toolkitConfigure({\n\t\treducer: makeReducer(),\n\t\tmiddleware: getDefaultMiddleware({\n\t\t\tserializableCheck: false,\n\t\t\timmutableCheck: false,\n\t\t}),\n\t\tdevTools: true,\n\t});\n\n\tif (process.env.NODE_ENV !== 'production') {\n\t\tif (module.hot) {\n\t\t\tmodule.hot.accept('./reducers', () => {\n\t\t\t\tstore.replaceReducer(makeReducer());\n\t\t\t});\n\t\t}\n\t}\n\n\treturn store;\n};\n\nexport default configureStore;\n","import { useDispatch } from 'react-redux';\nimport { useCallback } from 'react';\nimport { Action } from 'redux';\nimport configureStore from './configure-store';\n\ntype StoreType = ReturnType<typeof configureStore>;\ntype AppDispatch = StoreType['dispatch'];\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport const useDispatchCallback = <T extends Array<unknown>, ActionT extends Action>(\n\taction: (...args: T) => ActionT\n) => {\n\tconst dispatch = useAppDispatch();\n\treturn useCallback((...args: T) => dispatch(action(...args)), [dispatch, action]);\n};\n","import * as React from 'react';\nimport { useMemo, useState } from 'react';\nimport {\n\tFlexibleXYPlot,\n\tHorizontalGridLines,\n\tVerticalGridLines,\n\tXAxis,\n\tYAxis,\n\tLineMarkSeries,\n\tHighlight,\n\tBorders,\n} from 'react-vis';\n\ntype ReactVisArea = {\n\tleft: number;\n\tright: number;\n\ttop: number;\n\tbottom: number;\n};\n\nexport type DataPoint = {\n\tx: number;\n\t// null will allow gaps in series lines\n\ty: number | null;\n};\n\ntype SeriesTypes = 'line' | 'mark' | 'linemark';\n\nconst LineSeriesStyle = {\n\tlineStyle: { fill: 'none' },\n\tmarkStyle: { fill: 'none', stroke: 'none' },\n};\n\nconst MarkSeriesStyle = {\n\tlineStyle: { fill: 'none', stroke: 'none' },\n};\n\nconst LineMarkSeriesStyle = {\n\tlineStyle: { fill: 'none' },\n};\n\nfunction getSeriesStyle(type?: SeriesTypes) {\n\tswitch (type) {\n\t\tcase 'line':\n\t\t\treturn LineSeriesStyle;\n\t\tcase 'mark':\n\t\t\treturn MarkSeriesStyle;\n\t\tcase 'linemark':\n\t\t\treturn LineMarkSeriesStyle;\n\t\tdefault:\n\t\t\treturn LineMarkSeriesStyle;\n\t}\n}\n\nexport type DataSeriesT<DataPointT extends DataPoint = DataPoint> = {\n\tname: string;\n\tdata: DataPointT[];\n\tseriesType?: SeriesTypes;\n\tcolor?: string;\n};\n\ninterface Props<DataPointT extends DataPoint> {\n\tclassName?: string;\n\tseries: readonly DataSeriesT<DataPointT>[];\n\n\txType?: 'log';\n\tyType?: 'log';\n\n\txAxisLabel?: string;\n\tyAxisLabel?: string;\n\n\txDomain?: readonly [number, number];\n\tyDomain?: readonly [number, number];\n\n\txTickValues?: readonly number[];\n\tyTickValues?: readonly number[];\n\n\txTickFormat?(value: number, index?: number): string | React.ReactSVGElement;\n\tyTickFormat?(value: number, index?: number): string | React.ReactSVGElement;\n}\n\nconst buildSeriesComponents = <DataPointT extends DataPoint>(\n\tseries: readonly DataSeriesT<DataPointT>[]\n) => {\n\tconst seriesComponents = series\n\t\t.filter((s) => s.data.length > 0)\n\t\t.map((s, i) => {\n\t\t\treturn (\n\t\t\t\t<LineMarkSeries\n\t\t\t\t\tkey={i}\n\t\t\t\t\tsize={2}\n\t\t\t\t\tdata={s.data}\n\t\t\t\t\tcolor={s.color}\n\t\t\t\t\tgetNull={(p: DataPoint) => p.y !== null}\n\t\t\t\t\t{...getSeriesStyle(s.seriesType)}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\n\tif (seriesComponents.length > 0) {\n\t\treturn seriesComponents;\n\t}\n\n\t// If we don't have any series, return a dummy one so the chart still displays\n\treturn <LineMarkSeries size={0} data={[{ x: 1.0, y: 1.0 }]} />;\n};\n\nconst gridStyle = { stroke: 'lightgrey' };\nconst axisStyle = { line: { stroke: 'black' } };\nconst backgroundFill = { fill: '#fff' };\n// Define a style for the border around the inner chart area\n// which blocks the chart series from being seen under the axes\nconst borderStyle = {\n\tbottom: backgroundFill,\n\tleft: backgroundFill,\n\tright: backgroundFill,\n\ttop: backgroundFill,\n};\n\nconst XYPlot = <DataPointT extends DataPoint>(props: Props<DataPointT>) => {\n\tconst { series, xType, yType, xDomain, yDomain } = props;\n\n\tconst [zoomArea, setZoomArea] = useState<ReactVisArea | null>(null);\n\n\tconst xDomainToUse = zoomArea ? [zoomArea.left, zoomArea.right] : xDomain;\n\tconst yDomainToUse = zoomArea ? [zoomArea.bottom, zoomArea.top] : yDomain;\n\tconst seriesComponents = useMemo(() => buildSeriesComponents(series), [series]);\n\n\treturn (\n\t\t<FlexibleXYPlot\n\t\t\tclassName={props.className}\n\t\t\txDomain={xDomainToUse}\n\t\t\tyDomain={yDomainToUse}\n\t\t\txType={xType}\n\t\t\tyType={yType}\n\t\t>\n\t\t\t<HorizontalGridLines style={gridStyle} />\n\t\t\t<VerticalGridLines style={gridStyle} />\n\t\t\t{seriesComponents}\n\t\t\t<Borders style={borderStyle} />\n\t\t\t<XAxis\n\t\t\t\ttitle={props.xAxisLabel}\n\t\t\t\tstyle={axisStyle}\n\t\t\t\ttickValues={props.xTickValues}\n\t\t\t\ttickFormat={props.xTickFormat}\n\t\t\t/>\n\t\t\t<YAxis\n\t\t\t\ttitle={props.yAxisLabel}\n\t\t\t\tstyle={axisStyle}\n\t\t\t\ttickValues={props.yTickValues}\n\t\t\t\ttickFormat={props.yTickFormat}\n\t\t\t/>\n\t\t\t<Highlight onBrushEnd={setZoomArea} />\n\t\t</FlexibleXYPlot>\n\t);\n};\n\nXYPlot.defaultProps = {\n\txAxisLabel: '',\n\tyAxisLabel: '',\n};\n\nexport default XYPlot;\n","export const formatSecondsAsHHMMSS = (seconds: number): string => {\n\tconst roundedSeconds = Math.round(seconds);\n\tif (roundedSeconds < 60) return String(seconds);\n\n\tconst minutes = Math.floor(seconds / 60);\n\tconst remainingSeconds = seconds % 60;\n\tconst remainingSecondsStr =\n\t\tremainingSeconds < 10 ? `0${remainingSeconds}` : String(remainingSeconds);\n\n\tif (minutes < 60) return `${minutes}:${remainingSecondsStr}`;\n\n\tconst hours = Math.floor(minutes / 60);\n\n\tconst remainingMinutes = minutes % 60;\n\tconst remainingMinutesStr =\n\t\tremainingMinutes < 10 ? `0${remainingMinutes}` : String(remainingMinutes);\n\n\treturn `${hours}:${remainingMinutesStr}:${remainingSecondsStr}`;\n};\n\nexport const formatSecondsAsTimeWords = (seconds: number): string => {\n\tconst roundedSeconds = Math.round(seconds);\n\tif (roundedSeconds < 60) return `${seconds} s`;\n\n\tconst minutes = Math.floor(seconds / 60);\n\tconst remainingSeconds = seconds % 60;\n\tconst remainingSecondsStr =\n\t\tremainingSeconds === 0 ? `` : ` ${remainingSeconds < 10 ? `0` : ``}${remainingSeconds} s`;\n\n\treturn `${minutes} m${remainingSecondsStr}`;\n};\n","import * as d3 from 'd3';\nimport { getDistance } from 'geolib';\n\nimport { GpxData } from 'library/activity-parsers/gpx-parser';\nimport { TcxData, TcxActivity } from 'library/activity-parsers/tcx-parser';\nimport { ActivityPoint } from 'library/activity-parsers/shared-structures';\nimport { fillMissingIndices } from 'library/activity-data/best-split-calculator';\nimport { cumulative } from 'library/utils/array-utils';\n\ntype GpxContainer = {\n\ttype: 'gpx';\n\tdata: GpxData;\n};\n\ntype TcxContainer = {\n\ttype: 'tcx';\n\tdata: TcxActivity;\n};\n\nexport type ExtendedPoint = ActivityPoint & {\n\tsecondsSinceStart: number;\n\tcumulativeDistance?: number; // Metres\n};\n\nexport type ActivityContainer = {\n\tsource: GpxContainer | TcxContainer;\n\tflatPoints: ExtendedPoint[];\n\tfilledPoints: { index: number; data?: ExtendedPoint }[];\n};\n\ntype ActivityAttributes = {\n\tname: string;\n\tdate?: Date;\n};\n\nexport function getAttributes(activityContainer: ActivityContainer): ActivityAttributes {\n\tswitch (activityContainer.source.type) {\n\t\tcase 'gpx':\n\t\t\treturn {\n\t\t\t\tname: activityContainer.source.data.track.name,\n\t\t\t\tdate: activityContainer.source.data.metadata?.time,\n\t\t\t};\n\t\tcase 'tcx':\n\t\t\treturn {\n\t\t\t\tname: activityContainer.source.data.id,\n\t\t\t\tdate: activityContainer.source.data.laps[0]?.tracks[0]?.points[0]?.time,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn { name: '' };\n\t}\n}\n\nfunction asGeolibCoord(p: { lat: number; lon: number }) {\n\treturn {\n\t\tlatitude: p.lat,\n\t\tlongitude: p.lon,\n\t};\n}\n\nfunction getCumulativeDistances(points: ActivityPoint[]): number[] | undefined {\n\tconst hasLocation = !points.some((p) => p.location === undefined);\n\tif (hasLocation) {\n\t\tconst distancesBetween = points.map((p, i) =>\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\ti === 0 ? 0 : getDistance(asGeolibCoord(p.location!), asGeolibCoord(points[i - 1].location!))\n\t\t);\n\n\t\treturn cumulative(distancesBetween);\n\t}\n\n\tconst hasDistance = !points.some((p) => p.distance === undefined);\n\tif (hasDistance) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\treturn points.map((p) => p.distance!);\n\t}\n\n\treturn undefined;\n}\n\nconst buildExtendedPoints = (points: ActivityPoint[]): ExtendedPoint[] => {\n\tconst earliestTime = d3.min(points.map((p) => p.time)) ?? new Date();\n\tconst cumulativeDistances = getCumulativeDistances(points);\n\treturn points.map((p, i) => ({\n\t\t...p,\n\t\tcumulativeDistance: cumulativeDistances?.[i] ?? 0,\n\t\tsecondsSinceStart: (p.time.getTime() - earliestTime.getTime()) * 0.001,\n\t}));\n};\n\nexport function fromGPXData(data: GpxData): ActivityContainer {\n\tconst flatPoints = buildExtendedPoints(data.track.segments.flatMap((s) => s.points));\n\tconst filledPoints = fillMissingIndices(\n\t\tflatPoints.map((d) => ({ ...d, index: d.secondsSinceStart }))\n\t);\n\treturn {\n\t\tsource: { type: 'gpx', data },\n\t\tflatPoints,\n\t\tfilledPoints,\n\t};\n}\n\nexport function fromTCXData(data: TcxData): ActivityContainer[] {\n\treturn data.activities.map((activity) => {\n\t\tconst flatPoints = buildExtendedPoints(\n\t\t\tactivity.laps.flatMap((l) => l.tracks.flatMap((s) => s.points))\n\t\t);\n\n\t\tconst filledPoints = fillMissingIndices(\n\t\t\tflatPoints.map((d) => ({ ...d, index: d.secondsSinceStart }))\n\t\t);\n\t\treturn {\n\t\t\tsource: { type: 'tcx', data: activity },\n\t\t\tflatPoints,\n\t\t\tfilledPoints,\n\t\t};\n\t});\n}\n","import { createSelector } from '@reduxjs/toolkit';\nimport { getAttributes } from 'library/activity-data/activity-container';\nimport { ActivityState } from './slice';\n\nexport function getSelectedActivity(state: ActivityState) {\n\treturn state.selectedIndex !== undefined ? state.activities[state.selectedIndex] : undefined;\n}\n\nexport const getActivityAttributes = createSelector(\n\t(state: ActivityState) => state.activities,\n\t(activities) => activities.map((a) => ({ filename: a.filename, ...getAttributes(a) }))\n);\n","import {\n\tVariable,\n\tasRawVariable,\n\tBestSplitOption,\n} from 'library/activity-data/activity-calculator';\n\nexport function primaryColourForVariable(o: Variable) {\n\tswitch (o) {\n\t\tcase 'heartrate':\n\t\t\treturn '#c23b22';\n\t\tcase 'cadence':\n\t\t\treturn '#ffb347';\n\t\tcase 'power':\n\t\t\treturn '#966fd6';\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n}\n\nexport function primaryColourForBestSplitOption(o: BestSplitOption) {\n\tconst asVar = asRawVariable(o);\n\tif (asVar) return primaryColourForVariable(asVar);\n\n\tswitch (o) {\n\t\tcase 'speed':\n\t\t\treturn '#779ecb';\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n}\n\nexport function axisLabelForVariable(o: Variable) {\n\tswitch (o) {\n\t\tcase 'heartrate':\n\t\t\treturn 'HR';\n\t\tcase 'cadence':\n\t\t\treturn 'Cadence';\n\t\tcase 'power':\n\t\t\treturn 'Power (W)';\n\t\tdefault:\n\t\t\treturn '';\n\t}\n}\n","import { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { CSSProperties } from '@material-ui/core/styles/withStyles';\n\nexport function useFormStyles(extra?: { formControl?: CSSProperties }) {\n\treturn makeStyles((theme: Theme) =>\n\t\tcreateStyles({\n\t\t\tformControl: {\n\t\t\t\tmargin: theme.spacing(1),\n\t\t\t\tminWidth: 120,\n\t\t\t\t...extra?.formControl,\n\t\t\t},\n\t\t})\n\t)();\n}\n","import React from 'react';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport { useFormStyles } from 'components/styles/form-styles';\n\nimport { BestSplitOption } from 'library/activity-data/activity-calculator';\n\ntype Props = {\n\toption: BestSplitOption;\n\tonChange: (o: BestSplitOption) => void;\n};\n\nexport default function BestSplitCurveSelectionForm(props: Props) {\n\tconst styles = useFormStyles();\n\n\tconst { option, onChange } = props;\n\n\tconst makeOnChange = (o: BestSplitOption) => (e: unknown, c: boolean) => {\n\t\tif (c) onChange(o);\n\t};\n\n\treturn (\n\t\t<FormControl className={styles.formControl} component=\"fieldset\">\n\t\t\t<FormLabel component=\"legend\">Best Splits</FormLabel>\n\t\t\t<RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"HR\">\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tvalue=\"HR\"\n\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\tlabel=\"HR\"\n\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\tchecked={option === 'heartrate'}\n\t\t\t\t\tonChange={makeOnChange('heartrate')}\n\t\t\t\t/>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tvalue=\"power\"\n\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\tlabel=\"Power\"\n\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\tchecked={option === 'power'}\n\t\t\t\t\tonChange={makeOnChange('power')}\n\t\t\t\t/>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tvalue=\"pace\"\n\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\tlabel=\"Pace\"\n\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\tchecked={option === 'speed'}\n\t\t\t\t\tonChange={makeOnChange('speed')}\n\t\t\t\t/>\n\t\t\t</RadioGroup>\n\t\t</FormControl>\n\t);\n}\n","import React, { useMemo, useState } from 'react';\nimport XYPlot, { DataSeriesT } from 'generic-components/charts/xy-plot';\nimport * as activityCalculator from 'library/activity-data/activity-calculator';\nimport { BestSplitOption } from 'library/activity-data/activity-calculator';\nimport { ActivityContainer } from 'library/activity-data/activity-container';\nimport { formatSecondsAsTimeWords } from 'library/utils/time-format-utils';\nimport { useActivitySelector } from 'store/reducers';\nimport { getSelectedActivity } from 'store/activity-data/selectors';\nimport { primaryColourForBestSplitOption } from 'components/helpers/activity-data-component-helpers';\nimport BestSplitCurveSelection from './best-split-curve-selection';\n\nfunction frontBack<T>(a: T[]) {\n\treturn [a[0], a[a.length - 1]] as const;\n}\n\nconst defaultSecondTicks = [5, 30];\n\nconst defaultMinuteTicks = [1, 2, 5, 10, 20, 30, 45];\n\nconst defaultHourTicks = [1, 2, 5];\n\nconst defaultTimeTicksForBestSplits = [\n\t...defaultSecondTicks,\n\t...defaultMinuteTicks.map((t) => t * 60),\n\t...defaultHourTicks.map((t) => t * 60 * 60),\n];\n\nconst defaultTimeAxisRange = frontBack(defaultTimeTicksForBestSplits);\n\nconst distancesForPaceCurve = [100, 200, 400, 800, 1000, 1600, 5000, 10000];\n\nconst defaultPaceCurveXDomain = frontBack(distancesForPaceCurve);\n\nfunction buildPaceCurve(d: ActivityContainer) {\n\tconst bestSplits = activityCalculator.getMinTimesPerDistance(d, distancesForPaceCurve);\n\n\tconst bestSplitsDataPoints = bestSplits\n\t\t.filter((r) => r.best !== null)\n\t\t.map((r) => ({\n\t\t\tx: r.distance,\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\ty: r.distance / r.best!.time,\n\t\t}));\n\n\treturn {\n\t\tname: 'pace-curve',\n\t\tdata: bestSplitsDataPoints,\n\t\tcolor: primaryColourForBestSplitOption('speed'),\n\t};\n}\n\nfunction buildPowerCurve(d: ActivityContainer) {\n\tconst timeIntervals = [1, 5, 10, 30, 60, 120, 240, 360, 600, 900];\n\n\tconst bestSplits = activityCalculator.getBestSplitsVsTime(d, 'power', timeIntervals, 10);\n\n\tconst bestSplitsDataPoints = bestSplits.map((r) => ({\n\t\tx: r.distance,\n\t\ty: r.best?.average ?? null,\n\t}));\n\n\treturn {\n\t\tname: 'power-curve',\n\t\tdata: bestSplitsDataPoints,\n\t\tcolor: primaryColourForBestSplitOption('power'),\n\t};\n}\n\nfunction buildHRCurve(d: ActivityContainer) {\n\tconst timeIntervals = [1, 5, 10, 30, 60, 120, 240, 360, 600, 900];\n\n\tconst bestSplits = activityCalculator.getBestSplitsVsTime(d, 'heartrate', timeIntervals, 10);\n\n\tconst bestSplitsDataPoints = bestSplits.map((r) => ({\n\t\tx: r.distance,\n\t\ty: r.best?.average ?? null,\n\t}));\n\n\treturn {\n\t\tname: 'hr-best-splits',\n\t\tdata: bestSplitsDataPoints,\n\t\tcolor: primaryColourForBestSplitOption('heartrate'),\n\t};\n}\n\nfunction calcYDomain(series: readonly DataSeriesT[]) {\n\tlet yRange = null as [number, number] | null;\n\tseries.forEach((s) =>\n\t\ts.data.forEach((d) => {\n\t\t\tif (d.y !== null) {\n\t\t\t\tif (yRange == null) yRange = [d.y, d.y];\n\t\t\t\telse {\n\t\t\t\t\tif (d.y < yRange[0]) yRange[0] = d.y;\n\t\t\t\t\tif (d.y > yRange[1]) yRange[1] = d.y;\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n\n\tif (yRange == null) return undefined;\n\n\tconst difference = yRange[1] - yRange[0];\n\n\tconst margin = difference === 0 ? yRange[0] * 0.1 : difference * 0.1;\n\n\treturn [yRange[0] - margin, yRange[1] + margin] as const;\n}\n\ntype BestSplitPlotProps = Pick<\n\tReact.ComponentProps<typeof XYPlot>,\n\t'xAxisLabel' | 'yAxisLabel' | 'xTickValues' | 'xTickFormat' | 'series'\n> & {\n\tdefaultXDomain: readonly [number, number];\n};\n\nconst BestSplitPlot = (props: BestSplitPlotProps) => {\n\tconst { series, defaultXDomain, ...plotProps } = props;\n\n\tconst yDomain = useMemo(() => calcYDomain(series), [series]);\n\n\treturn (\n\t\t<XYPlot\n\t\t\tclassName=\"test-data-chart\"\n\t\t\tseries={series}\n\t\t\txDomain={series.length === 0 ? defaultXDomain : undefined}\n\t\t\tyDomain={yDomain}\n\t\t\txType=\"log\"\n\t\t\t{...plotProps}\n\t\t/>\n\t);\n};\n\nfunction bestSplitChartProps(o: BestSplitOption) {\n\tswitch (o) {\n\t\tcase 'heartrate':\n\t\t\treturn {\n\t\t\t\tdefaultXDomain: defaultTimeAxisRange,\n\t\t\t\txAxisLabel: 'time',\n\t\t\t\tyAxisLabel: 'HR',\n\t\t\t\txTickFormat: formatSecondsAsTimeWords,\n\t\t\t\txTickValues: defaultTimeTicksForBestSplits,\n\t\t\t};\n\t\tcase 'power':\n\t\t\treturn {\n\t\t\t\tdefaultXDomain: defaultTimeAxisRange,\n\t\t\t\txAxisLabel: 'time',\n\t\t\t\tyAxisLabel: 'power',\n\t\t\t\txTickFormat: formatSecondsAsTimeWords,\n\t\t\t\txTickValues: defaultTimeTicksForBestSplits,\n\t\t\t};\n\t\tcase 'speed':\n\t\t\treturn {\n\t\t\t\tdefaultXDomain: defaultPaceCurveXDomain,\n\t\t\t\txAxisLabel: 'distance',\n\t\t\t\tyAxisLabel: 'pace',\n\t\t\t\txTickFormat: String,\n\t\t\t\txTickValues: distancesForPaceCurve,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\tdefaultXDomain: defaultPaceCurveXDomain,\n\t\t\t\txAxisLabel: '',\n\t\t\t\tyAxisLabel: '',\n\t\t\t\txTickFormat: String,\n\t\t\t\txTickValues: distancesForPaceCurve,\n\t\t\t};\n\t}\n}\n\nfunction useBestSplitChartData(o: BestSplitOption) {\n\tconst selectedActivity = useActivitySelector((s) => getSelectedActivity(s));\n\treturn useMemo(() => {\n\t\tconst selectedActivities = selectedActivity ? [selectedActivity] : [];\n\t\tswitch (o) {\n\t\t\tcase 'heartrate':\n\t\t\t\treturn selectedActivities.map(buildHRCurve);\n\t\t\tcase 'power':\n\t\t\t\treturn selectedActivities.map(buildPowerCurve);\n\t\t\tcase 'speed':\n\t\t\t\treturn selectedActivities.map(buildPaceCurve);\n\t\t\tdefault:\n\t\t\t\treturn [];\n\t\t}\n\t}, [selectedActivity, o]);\n}\n\nexport default function BestSplitPlotComponent() {\n\tconst [bestSplitOption, setBestSplitOption] = useState<BestSplitOption>('power');\n\n\tconst data = useBestSplitChartData(bestSplitOption);\n\n\treturn (\n\t\t<>\n\t\t\t<BestSplitCurveSelection option={bestSplitOption} onChange={setBestSplitOption} />\n\t\t\t<BestSplitPlot series={data} {...bestSplitChartProps(bestSplitOption)} />\n\t\t</>\n\t);\n}\n","export const readFileAsText = (inputFile: File) => {\n\tconst fileReader = new FileReader();\n\n\treturn new Promise<string>((resolve, reject) => {\n\t\tfileReader.onerror = () => {\n\t\t\tfileReader.abort();\n\t\t\treject(new DOMException(`Failed to read ${inputFile.name}`));\n\t\t};\n\n\t\tfileReader.onload = () => {\n\t\t\tresolve(fileReader.result as string);\n\t\t};\n\n\t\tfileReader.readAsText(inputFile);\n\t});\n};\n","export function getElementValue(parent: Element, name: string) {\n\tconst elem = parent.getElementsByTagName(name)[0];\n\treturn elem && elem.innerHTML;\n}\n\nexport function getNumericChildElementValue(parent: Element, name: string): number | undefined {\n\tconst el = getElementValue(parent, name);\n\treturn el ? parseFloat(el) : undefined;\n}\n\nexport function getNumericAttributeValue(parent: Element, name: string): number | undefined {\n\tconst att = parent.getAttribute(name);\n\treturn att ? parseFloat(att) : undefined;\n}\n","import * as ArrayUtils from 'library/utils/array-utils';\n\nimport { ActivityPoint } from './shared-structures';\nimport * as Helper from './xml-helpers';\n\ninterface Metadata {\n\ttime: Date;\n}\n\n// A Track Segment holds a list of Track Points which are logically connected in order.\n// To represent a single GPS track where GPS reception was lost,\n// or the GPS receiver was turned off, start a new Track Segment for each continuous span of track data.\ninterface Segment {\n\tpoints: ActivityPoint[];\n}\n\n// Description from GPX spec:\n// trk represents a track - an ordered list of points describing a path.\nexport interface Track {\n\tname: string;\n\tsegments: Segment[];\n}\n\nconst getMetadata = (metadataNode: Element) => {\n\tconst time = Helper.getElementValue(metadataNode, 'time') || '';\n\treturn { time: new Date(time) };\n};\n\nconst getPoint = (pointNode: Element): ActivityPoint => {\n\tconst lat = Helper.getNumericAttributeValue(pointNode, 'lat');\n\tconst lon = Helper.getNumericAttributeValue(pointNode, 'lon');\n\tconst elevation = Helper.getNumericChildElementValue(pointNode, 'ele');\n\tconst time = Helper.getElementValue(pointNode, 'time') || '';\n\tconst power = Helper.getNumericChildElementValue(pointNode, 'power');\n\tconst temperature = Helper.getNumericChildElementValue(pointNode, 'gpxtpx:atemp');\n\tconst cadence = Helper.getNumericChildElementValue(pointNode, 'gpxtpx:cad');\n\tconst heartRate = Helper.getNumericChildElementValue(pointNode, 'gpxtpx:hr');\n\n\treturn {\n\t\tlocation: lat !== undefined && lon !== undefined ? { lat, lon } : undefined,\n\t\ttime: new Date(time),\n\t\televation,\n\t\ttemperature,\n\t\theartRate,\n\t\tcadence,\n\t\tpower,\n\t};\n};\n\nconst getSegment = (segmentNode: Element): Segment => {\n\tconst points = Array.from(segmentNode.querySelectorAll('trkpt')).map(getPoint);\n\treturn { points: ArrayUtils.filterNullAndUndefined(points) };\n};\n\nconst getTrack = (trackNode: Element) => {\n\tconst name = Helper.getElementValue(trackNode, 'name') || '';\n\tconst segments = Array.from(trackNode.querySelectorAll('trkseg')).map(getSegment);\n\treturn { name, segments };\n};\n\nexport interface GpxData {\n\tmetadata?: Metadata;\n\ttrack: Track;\n}\n\nexport function parseGPXFile(file: string): GpxData {\n\tconst xmlParser = new DOMParser();\n\tconst gpxXml = xmlParser.parseFromString(file, 'text/xml');\n\n\tconst metadataNode = gpxXml.querySelector('metadata');\n\tconst trackNode = gpxXml.querySelector('trk');\n\tconst track = trackNode ? getTrack(trackNode) : { name: '', segments: [] };\n\n\treturn {\n\t\tmetadata: metadataNode ? getMetadata(metadataNode) : undefined,\n\t\ttrack,\n\t};\n}\n","import * as ArrayUtils from 'library/utils/array-utils';\n\nimport { ActivityPoint } from './shared-structures';\nimport * as Helper from './xml-helpers';\n\ninterface Track {\n\tpoints: ActivityPoint[];\n}\n\ninterface TcxLap {\n\ttracks: Track[];\n}\n\nexport interface TcxActivity {\n\tid: string;\n\tlaps: TcxLap[];\n}\n\nexport interface TcxData {\n\tactivities: TcxActivity[];\n}\n\nfunction parseTrackPoint(pointElement: Element): ActivityPoint {\n\tconst time = Helper.getElementValue(pointElement, 'Time') || '';\n\tconst lat = Helper.getNumericChildElementValue(pointElement, 'LatitudeDegrees');\n\tconst lon = Helper.getNumericChildElementValue(pointElement, 'LongitudeDegrees');\n\n\tconst distance = Helper.getNumericChildElementValue(pointElement, 'DistanceMeters');\n\tconst elevation = Helper.getNumericChildElementValue(pointElement, 'AltitudeMeters');\n\n\tconst power = Helper.getNumericChildElementValue(pointElement, 'ns3:Watts');\n\tconst cadence = Helper.getNumericChildElementValue(pointElement, 'Cadence');\n\tconst hrElement = pointElement.querySelector('HeartRateBpm');\n\tconst heartRate = hrElement ? Helper.getNumericChildElementValue(hrElement, 'Value') : undefined;\n\n\t// note TCX does not support temperature\n\n\treturn {\n\t\tlocation: lat !== undefined && lon !== undefined ? { lat, lon } : undefined,\n\t\ttime: new Date(time),\n\t\tdistance,\n\t\televation,\n\t\theartRate,\n\t\tcadence,\n\t\tpower,\n\t};\n}\n\nfunction parseTrack(trackElement: Element) {\n\treturn { points: Array.from(trackElement.querySelectorAll('Trackpoint')).map(parseTrackPoint) };\n}\n\nfunction parseLap(lapElement: Element) {\n\treturn { tracks: Array.from(lapElement.querySelectorAll('Track')).map(parseTrack) };\n}\n\nfunction parseActivity(activityElement: Element) {\n\tconst id = Helper.getElementValue(activityElement, 'Id') || '';\n\treturn { id, laps: Array.from(activityElement.querySelectorAll('Lap')).map(parseLap) };\n}\n\nexport function parseTCXFile(file: string): TcxData {\n\tconst xmlParser = new DOMParser();\n\tconst tcxXml = xmlParser.parseFromString(file, 'text/xml');\n\tconst activitiesNode = tcxXml.querySelector('Activities');\n\tif (activitiesNode) {\n\t\tconst activities = activitiesNode.querySelectorAll('Activity');\n\t\treturn {\n\t\t\tactivities: ArrayUtils.filterNullAndUndefined(Array.from(activities).map(parseActivity)),\n\t\t};\n\t}\n\n\treturn { activities: [] };\n}\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { readFileAsText } from 'library/utils/file-utils';\nimport { GpxData, parseGPXFile } from 'library/activity-parsers/gpx-parser';\nimport { TcxData, parseTCXFile } from 'library/activity-parsers/tcx-parser';\nimport { fromGPXData, fromTCXData } from 'library/activity-data/activity-container';\n\ntype GpxDataContainer = {\n\ttype: 'gpx';\n\tdata: GpxData;\n};\ntype TcxDataContainer = {\n\ttype: 'tcx';\n\tdata: TcxData;\n};\ntype EmptyDataContainer = {\n\ttype: 'empty';\n};\ntype DataContainer = GpxDataContainer | TcxDataContainer | EmptyDataContainer;\n\nfunction parseData(\n\ttype: string,\n\tcontents: string\n): GpxDataContainer | TcxDataContainer | EmptyDataContainer {\n\tconst typeLower = type.toLowerCase();\n\tif (typeLower === 'gpx') return { type: 'gpx', data: parseGPXFile(contents) };\n\n\tif (typeLower === 'tcx') return { type: 'tcx', data: parseTCXFile(contents) };\n\n\treturn { type: 'empty' };\n}\n\nexport type FileAndData = { file: File; data: DataContainer };\n\nexport function extractActivityData(data: DataContainer) {\n\tswitch (data.type) {\n\t\tcase 'gpx':\n\t\t\treturn [fromGPXData(data.data)];\n\t\tcase 'tcx':\n\t\t\treturn fromTCXData(data.data);\n\t\tdefault:\n\t\t\treturn [];\n\t}\n}\n\ntype ActivityFileDropProps = {\n\tallowMultiple?: boolean;\n\tonAddFiles(file: FileAndData[]): void;\n\ttext?: string;\n};\n\nconst ActivityFileDrop = (props: ActivityFileDropProps) => {\n\tconst { onAddFiles, allowMultiple = true, text } = props;\n\n\tconst addFiles = useCallback(\n\t\t(files: FileAndData[]) => {\n\t\t\tonAddFiles(files);\n\t\t},\n\t\t[onAddFiles]\n\t);\n\n\tconst onDrop = useCallback(\n\t\tasync (acceptedFiles: File[]) => {\n\t\t\t// Read all files as strings asynchronously\n\t\t\tconst readers = acceptedFiles.map(async (f) => ({\n\t\t\t\tcontents: await readFileAsText(f),\n\t\t\t\tfile: f,\n\t\t\t}));\n\t\t\tconst fileContents = await Promise.all(readers);\n\n\t\t\t// Convert to gpx\n\t\t\tconst fileData = fileContents.map((f) => ({\n\t\t\t\tfile: f.file,\n\t\t\t\tdata: parseData(f.file.name.split('.').pop() ?? '', f.contents),\n\t\t\t}));\n\t\t\taddFiles(fileData);\n\t\t},\n\t\t[addFiles]\n\t);\n\n\tconst { getRootProps, getInputProps } = useDropzone({\n\t\tonDrop,\n\t\taccept: ['.gpx', '.tcx'],\n\t\tmultiple: allowMultiple,\n\t});\n\n\tconst textToUse =\n\t\ttext ??\n\t\t`Drop ${\n\t\t\tallowMultiple ? 'GPX/TCX files' : 'a GPX/TCX file'\n\t\t} here, or click to use the file browser`;\n\n\treturn (\n\t\t<section className=\"file-uploader\">\n\t\t\t<div {...getRootProps({ className: 'dropzone' })}>\n\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t<p>{textToUse}</p>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default ActivityFileDrop;\n","import React, { useCallback } from 'react';\nimport { useDispatchCallback } from 'store/dispatch-hooks';\nimport { addActivities } from 'store/activity-data/slice';\nimport ActivityFileDrop, {\n\tFileAndData,\n\textractActivityData,\n} from 'generic-components/file/activity-file-drop';\n\nconst ConnectedActivityFileDrop = (props: { text?: string }) => {\n\tconst addActivitesCallback = useDispatchCallback(addActivities);\n\tconst addFiles = useCallback(\n\t\t(files: FileAndData[]) =>\n\t\t\taddActivitesCallback(\n\t\t\t\tfiles.flatMap((f) =>\n\t\t\t\t\textractActivityData(f.data).map((a) => ({ filename: f.file.name, ...a }))\n\t\t\t\t)\n\t\t\t),\n\t\t[addActivitesCallback]\n\t);\n\n\treturn <ActivityFileDrop onAddFiles={addFiles} {...props} />;\n};\n\nexport default ConnectedActivityFileDrop;\n","import React, { useMemo, useState } from 'react';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport { useFormStyles } from 'components/styles/form-styles';\n\nimport { useActivitySelector } from 'store/reducers';\nimport { getActivityAttributes } from 'store/activity-data/selectors';\nimport { setSelectedIndex } from 'store/activity-data/slice';\nimport { useDispatchCallback } from 'store/dispatch-hooks';\n\nimport ConnectedActivityFileDrop from './connected-activity-file-drop';\n\nexport default function SimpleSelect() {\n\tconst classes = useFormStyles({ formControl: { width: 300 } });\n\n\tconst { activities, selectedIndex } = useActivitySelector((s) => ({\n\t\tactivities: getActivityAttributes(s),\n\t\tselectedIndex: s.selectedIndex,\n\t}));\n\n\tconst setSelectedActivityIndex = useDispatchCallback(setSelectedIndex);\n\n\tconst [showFilename, setShowFilename] = useState(false);\n\n\tconst menuItems = useMemo(\n\t\t() =>\n\t\t\tactivities.map((a, i) => (\n\t\t\t\t<MenuItem key={i} value={i}>\n\t\t\t\t\t{showFilename ? a.filename : a.name}\n\t\t\t\t</MenuItem>\n\t\t\t)),\n\t\t[activities, showFilename]\n\t);\n\n\treturn (\n\t\t<div style={{ display: 'flex', justifyContent: 'space-between' }}>\n\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t<InputLabel id=\"activity-select-label\">Activity</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tlabelId=\"activity-select-label\"\n\t\t\t\t\tid=\"activity-select\"\n\t\t\t\t\tvalue={selectedIndex ?? ''}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tconst value = parseInt(String(e.target.value), 10);\n\t\t\t\t\t\tif (Number.isSafeInteger(value)) {\n\t\t\t\t\t\t\tsetSelectedActivityIndex(value);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{menuItems}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={\n\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\tchecked={showFilename}\n\t\t\t\t\t\t\tonChange={(e) => setShowFilename(e.target.checked)}\n\t\t\t\t\t\t\tname=\"showFilenames\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tlabel=\"Show Filenames\"\n\t\t\t\t/>\n\t\t\t</FormControl>\n\t\t\t<div>\n\t\t\t\t<ConnectedActivityFileDrop text=\"Drop more GPX/TCX files here, or click to use the file browser\" />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n","import * as lodash from 'lodash';\n\nconst defaultSecondTicks = [1, 5, 10, 30];\n\nconst defaultMinuteTicks = [1, 2, 5, 10, 20, 30, 45];\n\nconst defaultHourTicks = [1, 2, 3, 4, 5];\n\nconst defaultTimeTicks = [\n\t...defaultSecondTicks,\n\t...defaultMinuteTicks.map((t) => t * 60),\n\t...defaultHourTicks.map((t) => t * 60 * 60),\n];\n\nexport const findNiceTickInterval = (maxValue: number, maxTicks: number) => {\n\tconst targetInterval = maxValue / maxTicks;\n\tconst digits = Math.floor(Math.log10(targetInterval)) + 1;\n\tconst powerOfTenAbove = 10 ** digits;\n\tconst loop = [0.05, 0.1, 0.2, 0.5, 1];\n\t// eslint-disable-next-line no-restricted-syntax\n\tfor (const l of loop) {\n\t\tconst interval = l * powerOfTenAbove;\n\t\tif (interval * maxTicks >= maxValue) return parseFloat(interval.toPrecision(1));\n\t}\n\treturn powerOfTenAbove;\n};\n\nexport const findNiceTimeTickInterval = (maxValue: number, maxTicks: number) => {\n\tconst targetInterval = maxValue / maxTicks;\n\t// eslint-disable-next-line no-restricted-syntax\n\tfor (const t of defaultTimeTicks) {\n\t\tconst nTicks = maxValue / t;\n\t\tif (nTicks <= maxTicks) return t;\n\t}\n\treturn targetInterval;\n};\n\nexport const buildNiceTimeTicksToDisplay = (maxSeconds: number, maxTicks: number) => {\n\tconst interval = findNiceTimeTickInterval(maxSeconds, maxTicks);\n\treturn lodash.range(0, maxSeconds, interval);\n};\n","import React from 'react';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport { useFormStyles } from 'components/styles/form-styles';\n\nimport { Variable } from 'library/activity-data/activity-calculator';\n\ntype Props = {\n\toption: Variable;\n\tonChange: (o: Variable) => void;\n};\n\nexport default function BestSplitCurveSelectionForm(props: Props) {\n\tconst styles = useFormStyles();\n\n\tconst { option, onChange } = props;\n\n\tconst makeOnChange = (o: Variable) => (e: unknown, c: boolean) => {\n\t\tif (c) onChange(o);\n\t};\n\n\treturn (\n\t\t<FormControl className={styles.formControl} component=\"fieldset\">\n\t\t\t<FormLabel component=\"legend\">Data View</FormLabel>\n\t\t\t<RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"HR\">\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tvalue=\"HR\"\n\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\tlabel=\"HR\"\n\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\tchecked={option === 'heartrate'}\n\t\t\t\t\tonChange={makeOnChange('heartrate')}\n\t\t\t\t/>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tvalue=\"power\"\n\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\tlabel=\"Power\"\n\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\tchecked={option === 'power'}\n\t\t\t\t\tonChange={makeOnChange('power')}\n\t\t\t\t/>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tvalue=\"cadence\"\n\t\t\t\t\tcontrol={<Radio color=\"primary\" />}\n\t\t\t\t\tlabel=\"Cadence\"\n\t\t\t\t\tlabelPlacement=\"start\"\n\t\t\t\t\tchecked={option === 'cadence'}\n\t\t\t\t\tonChange={makeOnChange('cadence')}\n\t\t\t\t/>\n\t\t\t</RadioGroup>\n\t\t</FormControl>\n\t);\n}\n","import React, { useMemo, useState } from 'react';\nimport lodash from 'lodash';\n\nimport XYPlot, { DataSeriesT } from 'generic-components/charts/xy-plot';\nimport { getAsTimeSeries, Variable } from 'library/activity-data/activity-calculator';\nimport { ActivityContainer } from 'library/activity-data/activity-container';\nimport { buildNiceTimeTicksToDisplay } from 'library/utils/chart-utils';\nimport { formatSecondsAsHHMMSS } from 'library/utils/time-format-utils';\nimport { useActivitySelector } from 'store/reducers';\nimport { getSelectedActivity } from 'store/activity-data/selectors';\nimport {\n\tprimaryColourForVariable,\n\taxisLabelForVariable,\n} from 'components/helpers/activity-data-component-helpers';\n\nimport TimeSeriesSelection from './time-series-selection';\n\nfunction buildTimeSeries(d: ActivityContainer | undefined, v: Variable, name: string): DataSeriesT {\n\treturn {\n\t\tname,\n\t\tdata: d ? getAsTimeSeries(d, v) : [],\n\t\tseriesType: 'line',\n\t\tcolor: primaryColourForVariable(v),\n\t};\n}\n\nconst TimeSeriesDataViewer = () => {\n\tconst [variableOption, setVariableOption] = useState<Variable>('power');\n\n\tconst selectedActivity = useActivitySelector((s) => getSelectedActivity(s));\n\n\tconst timeSeries = useMemo(\n\t\t() => buildTimeSeries(selectedActivity, variableOption, 'time-series'),\n\t\t[selectedActivity, variableOption]\n\t);\n\n\tconst maxTimeSeconds =\n\t\tuseMemo(() => lodash.max(timeSeries.data.map((d) => d.x)), [timeSeries]) ?? 0;\n\n\tconst timeTicks = buildNiceTimeTicksToDisplay(maxTimeSeconds, 6);\n\n\treturn (\n\t\t<>\n\t\t\t<TimeSeriesSelection option={variableOption} onChange={setVariableOption} />\n\t\t\t<XYPlot\n\t\t\t\tclassName=\"test-data-chart\"\n\t\t\t\tseries={[timeSeries]}\n\t\t\t\txTickFormat={formatSecondsAsHHMMSS}\n\t\t\t\txTickValues={timeTicks}\n\t\t\t\txAxisLabel=\"time\"\n\t\t\t\tyAxisLabel={axisLabelForVariable(variableOption)}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default TimeSeriesDataViewer;\n","import React, { useCallback } from 'react';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { useActivitySelector } from 'store/reducers';\nimport { View, setView } from 'store/activity-data/slice';\nimport { useDispatchCallback } from 'store/dispatch-hooks';\n\nconst StyledTabs = withStyles((theme) => ({\n\troot: {\n\t\tborderBottom: '1px solid #e8e8e8',\n\t\twidth: '100%',\n\t\tbackgroundColor: theme.palette.background.paper,\n\t},\n}))(Tabs);\n\ninterface StyledTabProps {\n\tlabel: string;\n}\n\nconst StyledTab = withStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\ttextTransform: 'none',\n\t\t\tminWidth: 72,\n\t\t\tfontWeight: theme.typography.fontWeightRegular,\n\t\t\tmarginRight: theme.spacing(4),\n\t\t},\n\t})\n)((props: StyledTabProps) => <Tab disableRipple {...props} />);\n\nconst viewOrder: View[] = ['data', 'interval-detector'];\nconst pageToIndex = (p: View) => viewOrder.findIndex((o) => o === p) ?? 0;\n\nconst NavigationTabs = () => {\n\tconst currentPage = useActivitySelector((s) => s.view);\n\n\tconst setViewCallback = useDispatchCallback(setView);\n\n\tconst setCurrentPageCallback = useCallback(\n\t\t(_: React.ChangeEvent<{}>, newValue: number) => {\n\t\t\tsetViewCallback(viewOrder[newValue]);\n\t\t},\n\t\t[setViewCallback]\n\t);\n\n\treturn (\n\t\t<StyledTabs value={pageToIndex(currentPage)} onChange={setCurrentPageCallback}>\n\t\t\t<StyledTab label=\"Data\" />\n\t\t\t<StyledTab label=\"Interval Detector\" />\n\t\t</StyledTabs>\n\t);\n};\n\nexport default NavigationTabs;\n","import React from 'react';\n\nimport { useActivitySelector } from 'store/reducers';\nimport { View } from 'store/activity-data/slice';\n\nimport BestSplitPlotViewer from './best-split-plot';\nimport ActivitySelectionForm from './activity-selection-form';\nimport TimeSeriesDataViewer from './time-series-data-viewer';\nimport ConnectedActivityFileDrop from './connected-activity-file-drop';\nimport ActivityViewSelection from './activity-view-selection';\n\nfunction componentFromView(view: View) {\n\tswitch (view) {\n\t\tcase 'data':\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<TimeSeriesDataViewer />\n\t\t\t\t\t<BestSplitPlotViewer />\n\t\t\t\t</>\n\t\t\t);\n\t\tcase 'interval-detector':\n\t\t\treturn <div />;\n\t\tdefault:\n\t\t\treturn <div />;\n\t}\n}\n\nconst ActivityDataViewer = () => {\n\tconst { activitiesLoaded, view } = useActivitySelector((s) => ({\n\t\tactivitiesLoaded: s.activities.length > 0,\n\t\tview: s.view,\n\t}));\n\n\tif (!activitiesLoaded) {\n\t\treturn (\n\t\t\t<div className=\"activity-data-welcome\">\n\t\t\t\t<h4>Welcome to raichu</h4>\n\t\t\t\t<p>頂きます</p>\n\t\t\t\t<ConnectedActivityFileDrop text=\"To get started, drop GPX/TCX files here, or click to use the file browser\" />\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"activity-data-viewer\">\n\t\t\t<ActivitySelectionForm />\n\t\t\t<ActivityViewSelection />\n\t\t\t{componentFromView(view)}\n\t\t</div>\n\t);\n};\n\nexport default ActivityDataViewer;\n","import * as React from 'react';\nimport { useRef, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport * as lodash from 'lodash';\nimport { withResizeDetector } from 'react-resize-detector';\nimport { findNiceTimeTickInterval } from 'library/utils/chart-utils';\nimport { formatSecondsAsHHMMSS } from 'library/utils/time-format-utils';\nimport { Interval, IntervalWithColor } from 'store/workout-creator/types';\n\ntype IntervalChartItem = IntervalWithColor & { startTime: number };\n\nconst calculateStartTimes = (intervals: readonly IntervalWithColor[]): IntervalChartItem[] => {\n\tconst copy = intervals.map((i) => ({ ...i, startTime: 0 }));\n\tfor (let i = 0; i < intervals.length; ++i) {\n\t\tcopy[i].startTime = i === 0 ? 0 : copy[i - 1].startTime + copy[i - 1].length;\n\t}\n\treturn copy;\n};\n\nconst timeTicksToDisplay = (maxSeconds: number, maxTicks: number) => {\n\tconst interval = findNiceTimeTickInterval(maxSeconds, maxTicks);\n\treturn lodash.range(0, maxSeconds, interval);\n};\n\nconst moveItemInArray = <T extends {}>(input: T[], from: number, to: number) => {\n\tconst inputCopy = input.slice();\n\tinputCopy.splice(to, 0, inputCopy.splice(from, 1)[0]);\n\treturn inputCopy;\n};\n\nconst buildChart = (\n\tnodeRef: SVGSVGElement,\n\twidth: number,\n\theight: number,\n\tinitialData: readonly IntervalWithColor[],\n\tselectedIndex: number | null,\n\tonChange: (it: IntervalWithColor[], i: number | null) => void\n) => {\n\tconst svg = d3.select(nodeRef).html('');\n\n\tconst padding = { top: 20, left: 40, right: 40, bottom: 20 };\n\n\tif (!width ?? !height) return;\n\n\tif (width <= padding.left + padding.right + 1 || height <= padding.top + padding.bottom + 1)\n\t\treturn;\n\n\tconst xScale = d3.scaleLinear();\n\tconst yScale = d3.scaleLinear();\n\n\tconst xScaleTimeSpan = (t: number) => xScale(t) - xScale(0);\n\n\tconst data = calculateStartTimes(initialData);\n\n\tsvg.on('click', () => onChange(data, null));\n\n\tlet localSelectedIndex = selectedIndex;\n\n\tconst updateSelectedOutline = () => {\n\t\tconst selectedData = localSelectedIndex == null ? null : data[localSelectedIndex];\n\n\t\tsvg\n\t\t\t.selectAll('rect')\n\t\t\t.attr('stroke', (d) => (d === selectedData ? 'black' : null))\n\t\t\t.filter((d) => d === selectedData)\n\t\t\t.raise();\n\t};\n\n\tconst setLocalSelectedIndex = (index: number) => {\n\t\tlocalSelectedIndex = index;\n\t\tupdateSelectedOutline();\n\t};\n\n\tlet dragMouseOffsetX: number;\n\n\tconst drag = d3\n\t\t.drag<SVGRectElement, IntervalChartItem>()\n\t\t.on('start', (d, i, j) => {\n\t\t\tconst dataIndex = data.indexOf(d);\n\t\t\tsetLocalSelectedIndex(dataIndex);\n\n\t\t\tconst bar = d3.select(j[i]);\n\t\t\tconst mouseX = d3.mouse(j[i])[0];\n\t\t\tconst barX = parseFloat(bar.attr('x'));\n\n\t\t\t// Store the original offset\n\t\t\tdragMouseOffsetX = mouseX - barX;\n\n\t\t\t// Bring the bar to the front\n\t\t\tbar.raise();\n\t\t})\n\t\t.on('drag', (d, i, j) => {\n\t\t\tconst draggingBar = d3.select(j[i]);\n\t\t\t// We rearrange the data as we drag, so the original i value isn't the index in the data array\n\t\t\tconst dragDataCurrentIndex = data.indexOf(d);\n\n\t\t\tconst mouseX = d3.mouse(j[i])[0];\n\n\t\t\tconst newX = mouseX - dragMouseOffsetX;\n\n\t\t\tconst draggingBarWidth = xScaleTimeSpan(d.length);\n\t\t\tconst backlash = draggingBarWidth / 2;\n\n\t\t\t// Don't let the bar go to far outside the axis range\n\t\t\tif (newX < xScale.range()[0] - backlash || xScale.range()[1] - backlash < newX) return;\n\n\t\t\tdraggingBar.attr('x', newX);\n\n\t\t\t// Find the index that we want to move the bar to\n\t\t\tconst newIndex = data.findIndex((d2) => xScale(d2.startTime) >= newX);\n\t\t\tconst newIndexToUse = newIndex === -1 ? data.length - 1 : newIndex;\n\n\t\t\tif (dragDataCurrentIndex === newIndexToUse) return;\n\n\t\t\tconst newDataOrder = moveItemInArray(data, dragDataCurrentIndex, newIndexToUse);\n\n\t\t\tfor (let k = 0; k < data.length; ++k) {\n\t\t\t\tdata[k] = newDataOrder[k];\n\t\t\t\tdata[k].startTime = k === 0 ? 0 : data[k - 1].startTime + data[k - 1].length;\n\t\t\t}\n\n\t\t\td3.selectAll<SVGRectElement, IntervalChartItem>('.bar')\n\t\t\t\t.filter((d2) => d2 !== d)\n\t\t\t\t.transition()\n\t\t\t\t.duration(100)\n\t\t\t\t.attr('x', (d2) => xScale(d2.startTime) ?? 0);\n\t\t})\n\t\t.on('end', (d, i, j) => {\n\t\t\tconst bar = d3.select(j[i]);\n\t\t\tconst currentX = parseFloat(bar.attr('x'));\n\t\t\tconst newX = xScale(d.startTime) ?? 0;\n\n\t\t\tconst doUpdate = () => {\n\t\t\t\tconst newSelectedIndex = data.indexOf(d);\n\t\t\t\tonChange(data, newSelectedIndex);\n\t\t\t};\n\n\t\t\tif (currentX !== newX) {\n\t\t\t\tbar.transition().duration(300).attr('x', newX).on('end', doUpdate);\n\t\t\t} else {\n\t\t\t\tdoUpdate();\n\t\t\t}\n\t\t});\n\n\tconst endTimeSeconds = d3.max(data, (d) => d.startTime + d.length) ?? 0;\n\n\tconst xAxis = d3\n\t\t.axisBottom(xScale)\n\t\t.tickValues(timeTicksToDisplay(endTimeSeconds, 6))\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t.tickFormat(formatSecondsAsHHMMSS as any);\n\n\tconst yAxis = d3.axisLeft(yScale).tickFormat(d3.format('.0%'));\n\n\txScale.domain([0, endTimeSeconds]).range([padding.left, width - padding.right]);\n\n\tyScale\n\t\t.domain([0, d3.max(data, (d) => d.intensity) ?? 0])\n\t\t.range([height - padding.bottom, padding.top]);\n\n\tsvg\n\t\t.selectAll('rect')\n\t\t.data(data)\n\t\t.enter()\n\t\t.append('rect')\n\t\t.attr('width', (d) => xScaleTimeSpan(d.length))\n\t\t.attr('height', (d) => height - padding.bottom - yScale(d.intensity))\n\t\t.attr('x', (d) => xScale(d.startTime))\n\t\t.attr('y', (d) => yScale(d.intensity))\n\t\t.attr('fill', (d) => d.color)\n\t\t.attr('class', 'bar')\n\t\t.call(drag);\n\n\tupdateSelectedOutline();\n\n\tsvg\n\t\t.append('g')\n\t\t.attr('transform', `translate(${0},${height - padding.bottom})`)\n\t\t.attr('class', 'x axis')\n\t\t.call(xAxis);\n\n\tsvg\n\t\t.append('g')\n\t\t.attr('transform', `translate(${padding.left},${0})`)\n\t\t.attr('class', 'y axis')\n\t\t.call(yAxis);\n};\n\ninterface Props {\n\tintervals: readonly IntervalWithColor[];\n\tselectedIndex: number | null;\n\tonChange(it: Interval[], i: number | null): void;\n\twidth: number;\n\theight: number;\n}\n\nconst WorkoutCreatorChart = (props: Props) => {\n\tconst svgRef = useRef<SVGSVGElement>(null);\n\n\tconst { intervals, selectedIndex, onChange, width, height } = props;\n\n\tuseEffect(() => {\n\t\tif (svgRef.current) {\n\t\t\tbuildChart(svgRef.current, width, height, intervals, selectedIndex, onChange);\n\t\t}\n\t}, [intervals, selectedIndex, onChange, width, height]);\n\n\treturn <svg ref={svgRef} width={width} height={height} />;\n};\n\nexport default withResizeDetector(WorkoutCreatorChart);\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport { useWorkoutCreatorSelector } from 'store/reducers';\nimport {\n\tsetFTP,\n\tsetStepThreshold,\n\tsetWindowRadius,\n\tsetInputSmoothing,\n\tsetDiscrepencySmoothing,\n\tgenerateIntervals,\n} from 'store/workout-creator/slice';\nimport { useAppDispatch, useDispatchCallback } from 'store/dispatch-hooks';\n\nconst useStyles = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tmargin: 0,\n\t\t\tpadding: theme.spacing(0, 2),\n\t\t\twidth: 160,\n\t\t},\n\t\tlabel: {\n\t\t\tpadding: theme.spacing(1),\n\t\t},\n\t})\n);\n\nconst NumericFormControlLabel = (props: {\n\tlabel: string;\n\tvalue: number;\n\tonChange: (v: number) => void;\n}) => {\n\tconst { label, value, onChange } = props;\n\tconst formControlClasses = useStyles();\n\n\treturn (\n\t\t<FormControlLabel\n\t\t\tclasses={formControlClasses}\n\t\t\tcontrol={\n\t\t\t\t<TextField\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tmargin=\"none\"\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={(e) => onChange(parseFloat(e.target.value))}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel={label}\n\t\t\tlabelPlacement=\"start\"\n\t\t/>\n\t);\n};\n\nconst SettingsFormGroup = () => {\n\tconst { state, loadedActivity, isGenerating, ftp, params } = useWorkoutCreatorSelector((s) => ({\n\t\tstate: s,\n\t\tloadedActivity: s.activity,\n\t\tisGenerating: s.generatingFromActivity,\n\t\tftp: s.ftp,\n\t\tparams: s.generationParams,\n\t}));\n\n\tconst setFTPCallback = useDispatchCallback(setFTP);\n\tconst setStepThresholdCallback = useDispatchCallback(setStepThreshold);\n\tconst setWindowRadiusCallback = useDispatchCallback(setWindowRadius);\n\tconst setInputSmoothingCallback = useDispatchCallback(setInputSmoothing);\n\tconst setDiscrepencySmoothingCallback = useDispatchCallback(setDiscrepencySmoothing);\n\n\tconst dispatch = useAppDispatch();\n\tconst generateIntervalsDispatcher = useCallback(() => {\n\t\tif (loadedActivity) dispatch(generateIntervals(state));\n\t}, [dispatch, loadedActivity, state]);\n\n\treturn (\n\t\t<FormGroup row>\n\t\t\t<NumericFormControlLabel label=\"FTP\" value={ftp} onChange={setFTPCallback} />\n\t\t\t<NumericFormControlLabel\n\t\t\t\tlabel=\"Window Size\"\n\t\t\t\tvalue={params.windowRadius}\n\t\t\t\tonChange={setWindowRadiusCallback}\n\t\t\t/>\n\t\t\t<NumericFormControlLabel\n\t\t\t\tlabel=\"Pre Smooth\"\n\t\t\t\tvalue={params.inputSmoothingRadius}\n\t\t\t\tonChange={setInputSmoothingCallback}\n\t\t\t/>\n\t\t\t<NumericFormControlLabel\n\t\t\t\tlabel=\"Post Smooth\"\n\t\t\t\tvalue={params.discrepencySmoothingRadius}\n\t\t\t\tonChange={setDiscrepencySmoothingCallback}\n\t\t\t/>\n\t\t\t<NumericFormControlLabel\n\t\t\t\tlabel=\"Step Threshold\"\n\t\t\t\tvalue={params.stepThreshold}\n\t\t\t\tonChange={setStepThresholdCallback}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tonClick={() => generateIntervalsDispatcher()}\n\t\t\t\tdisabled={!loadedActivity || isGenerating}\n\t\t\t>\n\t\t\t\tGenerate Intervals\n\t\t\t</Button>\n\t\t</FormGroup>\n\t);\n};\n\nexport default SettingsFormGroup;\n","import * as React from 'react';\nimport { useCallback, useMemo, useState } from 'react';\nimport * as d3 from 'd3';\n\nimport Box, { BoxProps } from '@material-ui/core/Box';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Close } from '@material-ui/icons';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nimport XYPlot, { DataSeriesT } from 'generic-components/charts/xy-plot';\nimport ActivityFileDrop, {\n\tFileAndData,\n\textractActivityData,\n} from 'generic-components/file/activity-file-drop';\n\nimport { formatSecondsAsHHMMSS } from 'library/utils/time-format-utils';\nimport { buildNiceTimeTicksToDisplay } from 'library/utils/chart-utils';\nimport { getAttributes } from 'library/activity-data/activity-container';\n\nimport { useDispatchCallback } from 'store/dispatch-hooks';\nimport { setActivity, clearActivity } from 'store/workout-creator/slice';\nimport { getDetectedIntervals } from 'store/workout-creator/selectors';\nimport { useWorkoutCreatorSelector } from 'store/reducers';\n\nimport SettingsFormGroup from './settings-form-group';\n\nconst ActivityLoadHeader = () => {\n\tconst { loadedActivity } = useWorkoutCreatorSelector((s) => ({\n\t\tloadedActivity: s.activity,\n\t\tisGenerating: s.generatingFromActivity,\n\t\tftp: s.ftp,\n\t}));\n\n\tconst setActivityDispatcher = useDispatchCallback(setActivity);\n\tconst clearActivitityDispatcher = useDispatchCallback(clearActivity);\n\n\tconst addFiles = useCallback(\n\t\t(files: FileAndData[]) => {\n\t\t\tif (files.length > 0) {\n\t\t\t\tconst { data } = files[0];\n\t\t\t\tconst activities = extractActivityData(data);\n\t\t\t\tif (activities.length > 0) {\n\t\t\t\t\tsetActivityDispatcher(activities[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[setActivityDispatcher]\n\t);\n\n\tif (loadedActivity) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<IconButton aria-label=\"close file\" onClick={() => clearActivitityDispatcher()}>\n\t\t\t\t\t<Close />\n\t\t\t\t</IconButton>\n\t\t\t\t<div style={{ marginRight: '20px' }}>\n\t\t\t\t\t<span>{`Loaded activity: ${getAttributes(loadedActivity).name}`}</span>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n\n\treturn <ActivityFileDrop onAddFiles={addFiles} allowMultiple={false} />;\n};\n\nconst stopClickFocusPropagation: Partial<BoxProps> = {\n\tonClick: (event) => event.stopPropagation(),\n\tonFocus: (event) => event.stopPropagation(),\n};\n\nfunction buildPowerSeries(data: DataSeriesT['data']): DataSeriesT {\n\treturn {\n\t\tname: 'power-vs-time',\n\t\tdata,\n\t\tseriesType: 'line',\n\t\tcolor: '#551A8B',\n\t};\n}\n\nfunction buildDiscrepencyCurveSeries(data: DataSeriesT['data']): DataSeriesT {\n\treturn {\n\t\tname: 'discrepency-curve',\n\t\tdata,\n\t\tseriesType: 'line',\n\t\tcolor: '#ff6961',\n\t};\n}\n\nfunction buildDetectedStepsSeries(data: DataSeriesT['data']): DataSeriesT {\n\treturn {\n\t\tname: 'detected-steps',\n\t\tdata,\n\t\tseriesType: 'mark',\n\t\tcolor: 'red',\n\t};\n}\n\nconst FormSwitch = (params: {\n\tlabel: string;\n\tvalue: boolean;\n\tsetValue: (v: boolean) => void;\n\tname: string;\n\tcolor?: 'primary' | 'secondary';\n}) => {\n\tconst { label, value, setValue, name, color } = params;\n\treturn (\n\t\t<FormControlLabel\n\t\t\tcontrol={\n\t\t\t\t<Switch\n\t\t\t\t\tchecked={value}\n\t\t\t\t\tonChange={(e) => setValue(e.target.checked)}\n\t\t\t\t\tname={name}\n\t\t\t\t\tcolor={color}\n\t\t\t\t/>\n\t\t\t}\n\t\t\tlabel={label}\n\t\t/>\n\t);\n};\n\nconst ActivityChart = () => {\n\tconst [showDiscrepencyCurve, setShowDiscrepencyCurve] = useState(false);\n\tconst [showDetectedSteps, setShowDetectedSteps] = useState(false);\n\tconst [showSmoothedInput, setShowSmoothedInput] = useState(false);\n\n\tconst {\n\t\trawInput,\n\t\tsmoothedInput,\n\t\tdiscrepencyCurve,\n\t\tstepThreshold,\n\t\tdetectedStepTimePoints,\n\t} = useWorkoutCreatorSelector((s) => ({\n\t\t...getDetectedIntervals(s),\n\t\tstepThreshold: s.generationParams.stepThreshold,\n\t}));\n\n\tconst powerData = showSmoothedInput ? smoothedInput : rawInput;\n\n\tconst maxPower = useMemo(() => d3.max(rawInput, (p) => p.y ?? 0) ?? 0, [rawInput]);\n\n\tconst powerDataSeries = useMemo(() => buildPowerSeries(powerData), [powerData]);\n\n\tconst discrepencyCurveSeries = useMemo(() => {\n\t\tconst absolute = discrepencyCurve.map((d) => ({ x: d.t, y: Math.abs(d.delta) }));\n\t\tconst maxDelta = d3.max(absolute, (a) => a.y) ?? 0;\n\t\tconst adjustment = maxDelta > 0 ? maxPower / maxDelta : 1.0;\n\t\tconst normalised = absolute.map((a) => ({\n\t\t\t...a,\n\t\t\ty: a.y > stepThreshold ? a.y * adjustment : null,\n\t\t}));\n\t\treturn buildDiscrepencyCurveSeries(normalised);\n\t}, [discrepencyCurve, maxPower, stepThreshold]);\n\n\tconst detectedStepsSeries = useMemo(() => {\n\t\tconst stepVsPower = detectedStepTimePoints.map((d) => ({ x: d, y: powerData[d].y }));\n\t\treturn buildDetectedStepsSeries(stepVsPower);\n\t}, [detectedStepTimePoints, powerData]);\n\n\tconst activityXTicks = useMemo(() => {\n\t\tconst maxX = powerData.length > 0 ? powerData[powerData.length - 1].x : 3600;\n\t\treturn buildNiceTimeTicksToDisplay(maxX, 5);\n\t}, [powerData]);\n\n\tconst allSeries = useMemo(\n\t\t() => [\n\t\t\t...(showDiscrepencyCurve ? [discrepencyCurveSeries] : []),\n\t\t\tpowerDataSeries,\n\t\t\t...(showDetectedSteps ? [detectedStepsSeries] : []),\n\t\t],\n\t\t[\n\t\t\tdetectedStepsSeries,\n\t\t\tdiscrepencyCurveSeries,\n\t\t\tpowerDataSeries,\n\t\t\tshowDetectedSteps,\n\t\t\tshowDiscrepencyCurve,\n\t\t]\n\t);\n\n\treturn (\n\t\t<Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\n\t\t\t<FormGroup row>\n\t\t\t\t<FormSwitch\n\t\t\t\t\tlabel=\"Show Smoothed Power\"\n\t\t\t\t\tname=\"showSmooth\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tvalue={showSmoothedInput}\n\t\t\t\t\tsetValue={setShowSmoothedInput}\n\t\t\t\t/>\n\t\t\t\t<FormSwitch\n\t\t\t\t\tlabel=\"Show Discrepency Curve\"\n\t\t\t\t\tname=\"showDCurve\"\n\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\tvalue={showDiscrepencyCurve}\n\t\t\t\t\tsetValue={setShowDiscrepencyCurve}\n\t\t\t\t/>\n\t\t\t\t<FormSwitch\n\t\t\t\t\tlabel=\"Show Steps\"\n\t\t\t\t\tname=\"showSteps\"\n\t\t\t\t\tvalue={showDetectedSteps}\n\t\t\t\t\tsetValue={setShowDetectedSteps}\n\t\t\t\t/>\n\t\t\t</FormGroup>\n\t\t\t<Box className=\"workout-creator-activity-data-chart\">\n\t\t\t\t<XYPlot\n\t\t\t\t\tseries={allSeries}\n\t\t\t\t\txTickFormat={formatSecondsAsHHMMSS}\n\t\t\t\t\txTickValues={activityXTicks}\n\t\t\t\t\txAxisLabel=\"time\"\n\t\t\t\t\tyAxisLabel=\"Power\"\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nconst ActivityLoader = () => (\n\t<>\n\t\t<ExpansionPanel>\n\t\t\t<ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n\t\t\t\t<Box display=\"flex\" flexDirection=\"column\" {...stopClickFocusPropagation}>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\tflexDirection=\"row\"\n\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\tminHeight=\"2em\"\n\t\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\t\t{...stopClickFocusPropagation}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ActivityLoadHeader />\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Box width=\"100%\" {...stopClickFocusPropagation}>\n\t\t\t\t\t\t<SettingsFormGroup />\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</ExpansionPanelSummary>\n\t\t\t<ExpansionPanelDetails>\n\t\t\t\t<ActivityChart />\n\t\t\t</ExpansionPanelDetails>\n\t\t</ExpansionPanel>\n\t</>\n);\n\nexport default ActivityLoader;\n","export type Interval = {\n\tdurationSeconds: number;\n\tintensityPercent: number;\n};\n\ntype CourseData = {\n\ttimeMinutes: number;\n\tintensityPercent: number;\n};\n\nconst calculateWithStartEndTimes = (intervals: Interval[]) => {\n\tconst withStartEndTimes = intervals.map((i) => ({\n\t\t...i,\n\t\tstartTimeMinutes: 0,\n\t\tendTimeMinutes: 0,\n\t}));\n\tfor (let i = 0; i < intervals.length; ++i) {\n\t\twithStartEndTimes[i].startTimeMinutes = i === 0 ? 0 : withStartEndTimes[i - 1].endTimeMinutes;\n\t\twithStartEndTimes[i].endTimeMinutes =\n\t\t\twithStartEndTimes[i].startTimeMinutes + withStartEndTimes[i].durationSeconds / 60;\n\t}\n\treturn withStartEndTimes;\n};\n\nconst convertToCourseData = (intervals: Interval[]): CourseData[] => {\n\tconst withStartAndEndTimes = calculateWithStartEndTimes(intervals);\n\n\treturn withStartAndEndTimes.flatMap((t) => [\n\t\t{ timeMinutes: t.startTimeMinutes, intensityPercent: t.intensityPercent },\n\t\t{ timeMinutes: t.endTimeMinutes, intensityPercent: t.intensityPercent },\n\t]);\n};\n\nconst makeCourseHeader = (name: string, description: string) =>\n\t`\n[COURSE HEADER]\\n\nVERSION = 2\\n\nUNITS = ENGLISH\\n\nDESCRIPTION = ${description}\\n\nFILE NAME = ${name}\\n\nMINUTES PERCENT\\n\n[END COURSE HEADER]\\n\n`;\n\nconst makeMRCString = (header: string, data: string) =>\n\t`\n${header}\n[COURSE DATA]\\n\n${data}\n[END COURSE DATA]\n`;\n\nexport const buildMRCFileString = (name: string, description: string, intervals: Interval[]) => {\n\tconst courseHeader = makeCourseHeader(name, description);\n\n\tconst courseData = convertToCourseData(intervals);\n\tconst courseDataString = courseData\n\t\t.map((d) => `${d.timeMinutes.toFixed(2)}\\t${d.intensityPercent.toFixed(0)}\\n`)\n\t\t.join('');\n\n\treturn makeMRCString(courseHeader, courseDataString);\n};\n","import * as React from 'react';\nimport { useCallback } from 'react';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Undo, Redo, Add, Save, Delete } from '@material-ui/icons';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport * as moment from 'moment';\nimport TimePicker from 'rc-time-picker';\n\nimport { useWorkoutCreatorSelector } from 'store/reducers';\nimport { useDispatchCallback } from 'store/dispatch-hooks';\nimport { Interval } from 'store/workout-creator/types';\nimport { actions as WorkoutCreatorActions } from 'store/workout-creator/slice';\nimport {\n\tcanUndo,\n\tcanRedo,\n\tselectedOrNewInterval,\n\tintervalsWithColor,\n} from 'store/workout-creator/selectors';\nimport { buildMRCFileString } from 'library/activity-data/export-mrc';\n\nconst useStyles = makeStyles((theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tpadding: theme.spacing(0, 2),\n\t\t\twidth: 160,\n\t\t},\n\t\tlabel: {\n\t\t\tpadding: theme.spacing(1),\n\t\t},\n\t})\n);\n\nconst useActions = () => {\n\tconst setIntervals = useDispatchCallback(WorkoutCreatorActions.setIntervals);\n\tconst undo = useDispatchCallback(WorkoutCreatorActions.undo);\n\tconst redo = useDispatchCallback(WorkoutCreatorActions.redo);\n\tconst setSelectedIntensity = useDispatchCallback(WorkoutCreatorActions.setSelectedIntensity);\n\tconst setSelectedLength = useDispatchCallback(WorkoutCreatorActions.setSelectedLength);\n\n\treturn {\n\t\tsetIntervals,\n\t\tundo,\n\t\tredo,\n\t\tsetSelectedIntensity,\n\t\tsetSelectedLength,\n\t};\n};\n\nconst downloadMRCFile = (intervals: readonly Interval[]) => {\n\tconst mrcString = buildMRCFileString(\n\t\t'Workout',\n\t\t'',\n\t\tintervals.map((i) => ({ durationSeconds: i.length, intensityPercent: i.intensity * 100 }))\n\t);\n\n\tconst element = document.createElement('a');\n\tconst file = new Blob([mrcString], { type: 'text/plain' });\n\telement.href = URL.createObjectURL(file);\n\telement.download = 'intervals.mrc';\n\tdocument.body.appendChild(element);\n\telement.click();\n};\n\nconst IntervalAdjustmentFormGroup = () => {\n\tconst {\n\t\tintervals,\n\t\tselectedIndex,\n\t\tcurrentSelectedInterval,\n\t\tundoEnabled,\n\t\tredoEnabled,\n\t\tnewInterval,\n\t} = useWorkoutCreatorSelector((w) => ({\n\t\tintervals: intervalsWithColor(w),\n\t\tselectedIndex: w.selectedIndex,\n\t\tundoEnabled: canUndo(w),\n\t\tredoEnabled: canRedo(w),\n\t\tnewInterval: w.newInterval,\n\t\tcurrentSelectedInterval: selectedOrNewInterval(w),\n\t}));\n\n\tconst { setIntervals, undo, redo, setSelectedIntensity, setSelectedLength } = useActions();\n\n\tconst saveToMRC = useCallback(() => downloadMRCFile(intervals), [intervals]);\n\n\tconst setIntervalDuration = useCallback(\n\t\t(m: moment.Moment | null) => {\n\t\t\tconst seconds = m?.unix() ?? 0;\n\t\t\tsetSelectedLength(seconds);\n\t\t},\n\t\t[setSelectedLength]\n\t);\n\n\tconst addInterval = useCallback(() => {\n\t\tif (newInterval.length > 0) {\n\t\t\tsetIntervals([...intervals, newInterval]);\n\t\t}\n\t}, [newInterval, setIntervals, intervals]);\n\n\tconst deleteSelected = useCallback(() => {\n\t\tif (selectedIndex != null) {\n\t\t\tconst copy = intervals.slice();\n\t\t\tcopy.splice(selectedIndex, 1);\n\t\t\tsetIntervals(copy);\n\t\t}\n\t}, [intervals, selectedIndex, setIntervals]);\n\n\tconst formControlClasses = useStyles();\n\n\treturn (\n\t\t<FormGroup row>\n\t\t\t<IconButton aria-label=\"save to MRC\" onClick={saveToMRC}>\n\t\t\t\t<Save />\n\t\t\t</IconButton>\n\t\t\t<IconButton aria-label=\"undo\" disabled={!undoEnabled} onClick={() => undo()}>\n\t\t\t\t<Undo />\n\t\t\t</IconButton>\n\t\t\t<IconButton aria-label=\"redo\" disabled={!redoEnabled} onClick={() => redo()}>\n\t\t\t\t<Redo />\n\t\t\t</IconButton>\n\t\t\t<FormControlLabel\n\t\t\t\tclasses={formControlClasses}\n\t\t\t\tcontrol={\n\t\t\t\t\t<TimePicker\n\t\t\t\t\t\tvalue={moment.utc(currentSelectedInterval.length * 1000)}\n\t\t\t\t\t\tonChange={(d) => setIntervalDuration(d)}\n\t\t\t\t\t\tshowHour={false}\n\t\t\t\t\t\tshowMinute={true}\n\t\t\t\t\t\tshowSecond={true}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Duration\"\n\t\t\t\tlabelPlacement=\"start\"\n\t\t\t/>\n\t\t\t<FormControlLabel\n\t\t\t\tclasses={formControlClasses}\n\t\t\t\tcontrol={\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tmargin=\"none\"\n\t\t\t\t\t\tvalue={currentSelectedInterval.intensity * 100}\n\t\t\t\t\t\tonChange={(e) => setSelectedIntensity(parseFloat(e.target.value) * 0.01)}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\tlabel=\"Intensity\"\n\t\t\t\tlabelPlacement=\"start\"\n\t\t\t/>\n\t\t\t<IconButton\n\t\t\t\taria-label=\"add\"\n\t\t\t\tonClick={addInterval}\n\t\t\t\tdisabled={newInterval.length === 0 || selectedIndex !== null}\n\t\t\t>\n\t\t\t\t<Add />\n\t\t\t</IconButton>\n\t\t\t<IconButton aria-label=\"delete\" onClick={deleteSelected} disabled={selectedIndex === null}>\n\t\t\t\t<Delete />\n\t\t\t</IconButton>\n\t\t</FormGroup>\n\t);\n};\n\nexport default IntervalAdjustmentFormGroup;\n","import * as React from 'react';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { batchActions } from 'redux-batched-actions';\n\nimport Box from '@material-ui/core/Box';\n\nimport { useWorkoutCreatorSelector } from 'store/reducers';\nimport { useDispatchCallback } from 'store/dispatch-hooks';\nimport { Interval } from 'store/workout-creator/types';\nimport { actions as WorkoutCreatorActions } from 'store/workout-creator/slice';\nimport { selectedOrNewInterval, intervalsWithColor } from 'store/workout-creator/selectors';\n\nimport WorkoutCreatorChart from './workout-creator-chart';\nimport ActivityLoader from './activity-loader';\nimport IntervalAdjustmentFormGroup from './interval-adjustment-form-group';\n\nconst useActions = () => {\n\tconst setIntervals = useDispatchCallback(WorkoutCreatorActions.setIntervals);\n\tconst setSelectedIntensity = useDispatchCallback(WorkoutCreatorActions.setSelectedIntensity);\n\tconst setSelectedLength = useDispatchCallback(WorkoutCreatorActions.setSelectedLength);\n\n\tconst dispatch = useDispatch();\n\tconst onChange = useCallback(\n\t\t(newIntervals: Interval[], newIndex: number | null) => {\n\t\t\t// Batch the interval and index updates to prevent flicker on multiple rerender\n\t\t\tdispatch(\n\t\t\t\tbatchActions([\n\t\t\t\t\tWorkoutCreatorActions.setIntervals(newIntervals),\n\t\t\t\t\tWorkoutCreatorActions.setSelectedIndex(newIndex),\n\t\t\t\t])\n\t\t\t);\n\t\t},\n\t\t[dispatch]\n\t);\n\n\treturn {\n\t\tsetIntervals,\n\t\tonChange,\n\t\tsetSelectedIntensity,\n\t\tsetSelectedLength,\n\t};\n};\n\nconst WorkoutCreatorPage = () => {\n\tconst { intervals, selectedIndex, currentSelectedInterval } = useWorkoutCreatorSelector((w) => ({\n\t\tintervals: intervalsWithColor(w),\n\t\tselectedIndex: w.selectedIndex,\n\t\tcurrentSelectedInterval: selectedOrNewInterval(w),\n\t}));\n\n\tconst { onChange, setSelectedIntensity, setSelectedLength } = useActions();\n\n\tconst onMouseWheel = useCallback(\n\t\t(e: React.WheelEvent) => {\n\t\t\tif (selectedIndex == null) return;\n\t\t\tconst intensityChange = e.deltaY < 0 ? 0.01 : -0.01;\n\t\t\tconst newIntensity = Math.max(\n\t\t\t\t0.01,\n\t\t\t\tcurrentSelectedInterval.intensity + intensityChange\n\t\t\t).toFixed(2);\n\t\t\tsetSelectedIntensity(parseFloat(newIntensity));\n\t\t},\n\t\t[currentSelectedInterval, selectedIndex, setSelectedIntensity]\n\t);\n\n\treturn (\n\t\t<div className=\"workout-creator-panel\">\n\t\t\t<Box display=\"flex\" flexDirection=\"column\">\n\t\t\t\t<ActivityLoader />\n\t\t\t\t<IntervalAdjustmentFormGroup />\n\t\t\t\t<Box>\n\t\t\t\t\t<div className=\"workout-creator-chart\" onWheel={onMouseWheel}>\n\t\t\t\t\t\t<WorkoutCreatorChart\n\t\t\t\t\t\t\tintervals={intervals}\n\t\t\t\t\t\t\tselectedIndex={selectedIndex}\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default WorkoutCreatorPage;\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 230;\n\nconst useStyles = makeStyles((theme: Theme) =>\n\tcreateStyles({\n\t\troot: {\n\t\t\tdisplay: 'flex',\n\t\t},\n\t\tdrawer: {\n\t\t\t[theme.breakpoints.up('lg')]: {\n\t\t\t\twidth: drawerWidth,\n\t\t\t\tflexShrink: 0,\n\t\t\t},\n\t\t},\n\t\tappBar: {\n\t\t\t[theme.breakpoints.up('lg')]: {\n\t\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\t\tmarginLeft: drawerWidth,\n\t\t\t},\n\t\t},\n\t\tmenuButton: {\n\t\t\tmarginRight: theme.spacing(2),\n\t\t\t[theme.breakpoints.up('lg')]: {\n\t\t\t\tdisplay: 'none',\n\t\t\t},\n\t\t},\n\t\t// necessary for content to be below app bar\n\t\ttoolbar: theme.mixins.toolbar,\n\t\tdrawerPaper: {\n\t\t\twidth: drawerWidth,\n\t\t},\n\t\tcontent: {\n\t\t\tflexGrow: 1,\n\t\t\tpadding: theme.spacing(3),\n\t\t\twidth: '100%',\n\t\t},\n\t})\n);\n\ntype Props<T> = {\n\tmenuItems: { value: T; name: string }[];\n\tonMenuSelect: (value: T) => void;\n};\n\nexport default function ResponsiveDrawerNav<T>(props: React.PropsWithChildren<Props<T>>) {\n\tconst { children, menuItems, onMenuSelect } = props;\n\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\tconst drawer = (\n\t\t<div>\n\t\t\t<div className={classes.toolbar} />\n\t\t\t<Divider />\n\t\t\t<List>\n\t\t\t\t{menuItems.map((i) => (\n\t\t\t\t\t<ListItem button key={i.name} onClick={() => onMenuSelect(i.value)}>\n\t\t\t\t\t\t<ListItemText primary={i.name} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open menu\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h6\" noWrap>\n\t\t\t\t\t\traichu\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<nav className={classes.drawer} aria-label=\"menu\">\n\t\t\t\t<Hidden lgUp implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\n\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden mdDown implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\topen\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t</nav>\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t{children}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n","import React, { useMemo } from 'react';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport { useViewSelector } from 'store/reducers';\nimport { Page, setCurrentPage } from 'store/view/slice';\nimport { useDispatchCallback } from 'store/dispatch-hooks';\n\nimport ActivityDataViewer from './activity-view/activity-data-viewer';\nimport WorkoutCreatorPanel from './workout-creator/workout-creator-panel';\nimport ResponsiveDrawerNav from './responsive-drawer-nav';\n\nimport 'rc-time-picker/assets/index.css';\nimport './main.css';\n\nconst palette = {\n\tprimary: { main: '#D1C4E9' },\n\tsecondary: { main: '#FFECB3' },\n};\n\nconst theme = createMuiTheme({\n\tpalette,\n});\n\nconst getPage = (page: Page) => {\n\tswitch (page) {\n\t\tcase 'data':\n\t\t\treturn ActivityDataViewer;\n\t\tcase 'workout-creator':\n\t\t\treturn WorkoutCreatorPanel;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n\n\treturn () => <div />;\n};\n\nexport default function AppImpl() {\n\tconst currentPage = useViewSelector((s) => s.currentPage);\n\tconst PageElement = useMemo(() => getPage(currentPage), [currentPage]);\n\n\tconst setCurrentPageCallback = useDispatchCallback(setCurrentPage);\n\n\tconst menuItems = [\n\t\t{ name: 'Data', value: 'data' as const },\n\t\t{ name: 'Workout Creator', value: 'workout-creator' as const },\n\t];\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<ResponsiveDrawerNav menuItems={menuItems} onMenuSelect={setCurrentPageCallback}>\n\t\t\t\t<PageElement />\n\t\t\t</ResponsiveDrawerNav>\n\t\t</ThemeProvider>\n\t);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.');\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { Provider } from 'react-redux';\n\nimport configureStore from 'store/configure-store';\nimport AppImpl from './components/app-impl';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<AppImpl />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}