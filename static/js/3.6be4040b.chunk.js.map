{"version":3,"sources":["../rust-wasm/pkg/jolteon.js","../rust-wasm/pkg/jolteon_bg.js"],"names":["cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","heap","Array","fill","undefined","push","heap_next","length","addHeapObject","obj","idx","getObject","takeObject","ret","dropObject","init","greet","cachegetFloat64Memory0","WASM_VECTOR_LEN","passArrayF64ToWasm0","arg","malloc","Float64Array","set","cachegetUint32Memory0","passArray32ToWasm0","Uint32Array","best_averages_for_distances","data_points","distances","ptr0","len0","ptr1","len1","cachedTextEncoder","TextEncoder","encodeString","encodeInto","view","buf","encode","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","__wbindgen_string_new","arg0","arg1","__wbindgen_object_drop_ref","__wbindgen_json_parse","JSON","parse","__wbg_new_59cb74e423758ede","Error","__wbg_stack_558ba5917b466edd","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","stack","__wbg_error_4bb6c2a97407129a","console","error","__wbg_log_cc6b9ddc6ca5449d","log","__wbindgen_throw"],"mappings":"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","file":"static/js/3.6be4040b.chunk.js","sourcesContent":["import * as wasm from \"./jolteon_bg.wasm\";\nexport * from \"./jolteon_bg.js\";","import * as wasm from './jolteon_bg.wasm';\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction getObject(idx) { return heap[idx]; }\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n*/\nexport function init() {\n    wasm.init();\n}\n\n/**\n*/\nexport function greet() {\n    wasm.greet();\n}\n\nlet cachegetFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n    if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachegetFloat64Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArrayF64ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 8);\n    getFloat64Memory0().set(arg, ptr / 8);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Float64Array} data_points\n* @param {Uint32Array} distances\n* @returns {BestAverageResult[]}\n*/\nexport function best_averages_for_distances(data_points, distances) {\n    var ptr0 = passArrayF64ToWasm0(data_points, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray32ToWasm0(distances, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ret = wasm.best_averages_for_distances(ptr0, len0, ptr1, len1);\n    return takeObject(ret);\n}\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nexport const __wbindgen_string_new = function(arg0, arg1) {\n    var ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbindgen_json_parse = function(arg0, arg1) {\n    var ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_new_59cb74e423758ede = function() {\n    var ret = new Error();\n    return addHeapObject(ret);\n};\n\nexport const __wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n    var ret = getObject(arg1).stack;\n    var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\nexport const __wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n    try {\n        console.error(getStringFromWasm0(arg0, arg1));\n    } finally {\n        wasm.__wbindgen_free(arg0, arg1);\n    }\n};\n\nexport const __wbg_log_cc6b9ddc6ca5449d = function(arg0) {\n    console.log(getObject(arg0));\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n"],"sourceRoot":""}